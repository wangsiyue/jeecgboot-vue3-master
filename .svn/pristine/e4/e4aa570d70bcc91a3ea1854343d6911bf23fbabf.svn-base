{
  "version": 3,
  "sources": ["../../../src/utils/uuid.ts", "../../@jeecg/online/cgform.data.js"],
  "sourcesContent": ["const hexList: string[] = [];\nfor (let i = 0; i <= 15; i++) {\n  hexList[i] = i.toString(16);\n}\n\nexport function buildUUID(): string {\n  let uuid = '';\n  for (let i = 1; i <= 36; i++) {\n    if (i === 9 || i === 14 || i === 19 || i === 24) {\n      uuid += '-';\n    } else if (i === 15) {\n      uuid += 4;\n    } else if (i === 20) {\n      uuid += hexList[(Math.random() * 4) | 8];\n    } else {\n      uuid += hexList[(Math.random() * 16) | 0];\n    }\n  }\n  return uuid.replace(/-/g, '');\n}\n\nlet unique = 0;\nexport function buildShortUUID(prefix = ''): string {\n  const time = Date.now();\n  const random = Math.floor(Math.random() * 1000000000);\n  unique++;\n  return prefix + '_' + random + unique + String(time);\n}\n", "import { getDictItemsByCode } from \"/@/utils/dict\";\nimport { filterDictText } from \"/@/utils/dict/JDictSelectUtil\";\nimport { buildUUID } from \"/@/utils/uuid\";\nconst VALIDATE_FAILED = \"validate-failed\";\nconst columns = [\n  {\n    title: \"\\u8868\\u7C7B\\u578B\",\n    align: \"center\",\n    sorter: true,\n    dataIndex: \"tableType\",\n    width: 140,\n    customRender({ text, record }) {\n      let tableTypeDictOptions = getDictItemsByCode(\"cgform_table_type\");\n      let tbTypeText = filterDictText(tableTypeDictOptions, text);\n      if (record.isTree === \"Y\") {\n        tbTypeText += \"(\\u6811)\";\n      }\n      if (record.themeTemplate === \"innerTable\") {\n        tbTypeText += \"(\\u5185\\u5D4C)\";\n      } else if (record.themeTemplate === \"erp\") {\n        tbTypeText += \"(ERP)\";\n      } else if (record.themeTemplate === \"tab\") {\n        tbTypeText += \"(TAB)\";\n      }\n      return tbTypeText;\n    }\n  },\n  {\n    title: \"\\u8868\\u540D\",\n    sorter: true,\n    align: \"center\",\n    dataIndex: \"tableName\",\n    width: 240\n  },\n  {\n    title: \"\\u8868\\u63CF\\u8FF0\",\n    align: \"center\",\n    dataIndex: \"tableTxt\",\n    width: 220\n  },\n  {\n    title: \"\\u7248\\u672C\",\n    align: \"center\",\n    dataIndex: \"tableVersion\",\n    width: 120\n  },\n  {\n    title: \"\\u540C\\u6B65\\u72B6\\u6001\",\n    align: \"center\",\n    sorter: true,\n    dataIndex: \"isDbSynch\",\n    slots: { customRender: \"dbSync\" },\n    width: 120\n  },\n  {\n    title: \"\\u521B\\u5EFA\\u65F6\\u95F4\",\n    align: \"center\",\n    sorter: true,\n    dataIndex: \"createTime\",\n    width: 240\n  }\n];\nconst searchFormSchema = [\n  {\n    label: \"\\u8868\\u540D\",\n    field: \"tableName\",\n    component: \"JInput\"\n  },\n  {\n    label: \"\\u8868\\u7C7B\\u578B\",\n    field: \"tableType_MultiString\",\n    component: \"JDictSelectTag\",\n    componentProps: {\n      dictCode: \"cgform_table_type\",\n      mode: \"multiple\"\n    }\n  },\n  {\n    label: \"\\u8868\\u63CF\\u8FF0\",\n    field: \"tableTxt\",\n    component: \"JInput\"\n  }\n];\nconst ExtConfigDefaultJson = {\n  reportPrintShow: 0,\n  reportPrintUrl: \"\",\n  joinQuery: 0,\n  modelFullscreen: 0,\n  modalMinWidth: \"\"\n};\nfunction useInitialData() {\n  let initialData = [\n    {\n      dbFieldName: \"id\",\n      dbFieldTxt: \"\\u4E3B\\u952E\",\n      dbLength: 36,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"string\",\n      dbIsKey: \"1\",\n      dbIsNull: \"0\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      isReadOnly: \"1\",\n      fieldShowType: \"text\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    },\n    {\n      dbFieldName: \"create_by\",\n      dbFieldTxt: \"\\u521B\\u5EFA\\u4EBA\",\n      dbLength: 50,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"string\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      fieldShowType: \"text\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    },\n    {\n      dbFieldName: \"create_time\",\n      dbFieldTxt: \"\\u521B\\u5EFA\\u65E5\\u671F\",\n      dbLength: 0,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"Datetime\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      fieldShowType: \"datetime\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    },\n    {\n      dbFieldName: \"update_by\",\n      dbFieldTxt: \"\\u66F4\\u65B0\\u4EBA\",\n      dbLength: 50,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"string\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      fieldShowType: \"text\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    },\n    {\n      dbFieldName: \"update_time\",\n      dbFieldTxt: \"\\u66F4\\u65B0\\u65E5\\u671F\",\n      dbLength: 0,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"Datetime\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      fieldShowType: \"datetime\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    },\n    {\n      dbFieldName: \"sys_org_code\",\n      dbFieldTxt: \"\\u6240\\u5C5E\\u90E8\\u95E8\",\n      dbLength: 64,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"string\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      fieldShowType: \"text\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    }\n  ];\n  let tempIds = [];\n  initialData.forEach((record) => {\n    record[\"id\"] = buildUUID();\n    tempIds.push(record[\"id\"]);\n  });\n  return { initialData, tempIds };\n}\nfunction useTreeNeedFields() {\n  return [\n    {\n      dbFieldName: \"pid\",\n      dbFieldTxt: \"\\u7236\\u7EA7\\u8282\\u70B9\",\n      dbLength: 32,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"string\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"1\",\n      isShowList: \"0\",\n      fieldShowType: \"text\",\n      fieldLength: \"120\",\n      queryMode: \"single\"\n    },\n    {\n      dbFieldName: \"has_child\",\n      dbFieldTxt: \"\\u662F\\u5426\\u6709\\u5B50\\u8282\\u70B9\",\n      dbLength: 3,\n      dbPointLength: 0,\n      dbDefaultVal: \"\",\n      dbType: \"string\",\n      dbIsKey: \"0\",\n      dbIsNull: \"1\",\n      isShowForm: \"0\",\n      isShowList: \"0\",\n      fieldShowType: \"list\",\n      fieldLength: \"120\",\n      queryMode: \"single\",\n      dictField: \"yn\"\n    }\n  ];\n}\nconst onlineDefaultButton = [\n  { code: \"add\", title: \"\\u65B0\\u589E\", status: 0 },\n  { code: \"edit\", title: \"\\u7F16\\u8F91\", status: 0 },\n  { code: \"delete\", title: \"\\u5220\\u9664\", status: 0 },\n  { code: \"export\", title: \"\\u5BFC\\u51FA\", status: 0 },\n  { code: \"import\", title: \"\\u5BFC\\u5165\", status: 0 },\n  { code: \"query\", title: \"\\u67E5\\u8BE2\", status: 0 }\n];\nexport { ExtConfigDefaultJson as E, VALIDATE_FAILED as V, useTreeNeedFields as a, columns as c, onlineDefaultButton as o, searchFormSchema as s, useInitialData as u };\n"],
  "mappings": "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",
  "names": []
}
