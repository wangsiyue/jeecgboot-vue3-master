import {
  useTableSync
} from "./chunk-N55FAH43.js";
import {
  _export_sfc
} from "./chunk-CITY6UHW.js";
import {
  createBlock,
  defineComponent,
  openBlock,
  ref,
  resolveComponent
} from "./chunk-JQQZ4WSS.js";
import {
  init_define_APP_INFO
} from "./chunk-ET6QIZHT.js";

// node_modules/@jeecg/online/CheckDictTable.js
init_define_APP_INFO();
import "E:/workspace/projects/dev/jeecgboot-vue3-master/src/components/jeecg/OnLine/JPopupOnlReport.vue";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var _sfc_main = defineComponent({
  name: "CheckDictTable",
  setup() {
    const columns = ref([
      { title: "\u5B57\u6BB5\u540D\u79F0", key: "dbFieldName", width: 100 },
      { title: "\u5B57\u6BB5\u5907\u6CE8", key: "dbFieldTxt", width: 100 },
      {
        title: "\u5B57\u6BB5Href",
        key: "fieldHref",
        width: 130,
        type: "input" /* input */,
        defaultValue: ""
      },
      {
        title: "\u9A8C\u8BC1\u89C4\u5219",
        key: "fieldValidType",
        width: 170,
        type: "select" /* select */,
        allowInput: true,
        options: [
          { title: "\u7A7A", value: "" },
          { title: "\u552F\u4E00\u6821\u9A8C", value: "only" },
          { title: "6\u523016\u4F4D\u6570\u5B57", value: "n6-16" },
          { title: "6\u523018\u4F4D\u5B57\u6BCD", value: "s6-18" },
          { title: "6\u523016\u4F4D\u4EFB\u610F\u5B57\u7B26", value: "*6-16" },
          { title: "\u7F51\u5740", value: "url" },
          { title: "\u7535\u5B50\u90AE\u4EF6", value: "e" },
          { title: "\u624B\u673A\u53F7\u7801", value: "m" },
          { title: "\u90AE\u653F\u7F16\u7801", value: "p" },
          { title: "\u5B57\u6BCD", value: "s" },
          { title: "\u6570\u5B57", value: "n" },
          { title: "\u6574\u6570", value: "z" },
          { title: "\u975E\u7A7A", value: "*" },
          { title: "\u91D1\u989D", value: "money" }
        ],
        defaultValue: ""
      },
      {
        title: "\u6821\u9A8C\u5FC5\u586B",
        key: "fieldMustInput",
        width: 80,
        type: "checkbox" /* checkbox */,
        align: "center",
        customValue: ["1", "0"],
        defaultChecked: false
      },
      {
        title: "\u5B57\u5178Table",
        key: "dictTable",
        width: 280,
        type: "textarea" /* textarea */,
        defaultValue: ""
      },
      {
        title: "\u5B57\u5178Code",
        key: "dictField",
        width: 280,
        type: "input" /* input */,
        defaultValue: ""
      },
      {
        title: "\u5B57\u5178Text",
        key: "dictText",
        width: 280,
        type: "input" /* input */,
        defaultValue: ""
      }
    ]);
    const setup = useTableSync(columns);
    return __spreadProps(__spreadValues({}, setup), { columns });
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_JVxeTable = resolveComponent("JVxeTable");
  return openBlock(), createBlock(_component_JVxeTable, {
    ref: "tableRef",
    rowNumber: "",
    keyboardEdit: "",
    maxHeight: _ctx.tableHeight.noToolbar,
    loading: _ctx.loading,
    columns: _ctx.columns,
    dataSource: _ctx.dataSource,
    disabledRows: { dbFieldName: ["id", "has_child"] }
  }, null, 8, ["maxHeight", "loading", "columns", "dataSource"]);
}
var CheckDictTable = _export_sfc(_sfc_main, [["render", _sfc_render]]);

export {
  CheckDictTable
};
//# sourceMappingURL=chunk-43EER65N.js.map
