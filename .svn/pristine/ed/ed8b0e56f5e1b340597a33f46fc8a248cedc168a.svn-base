import {
  useTableSync
} from "./chunk-NVCZ2J7C.js";
import {
  _export_sfc
} from "./chunk-GZ7LOGNL.js";
import {
  createBlock,
  defineComponent,
  openBlock,
  ref,
  resolveComponent
} from "./chunk-JQQZ4WSS.js";
import {
  init_define_APP_INFO
} from "./chunk-ET6QIZHT.js";

// node_modules/@jeecg/online/PageAttributeTable.js
init_define_APP_INFO();
import "D:/jeecgboot-vue3-master/src/components/jeecg/OnLine/JPopupOnlReport.vue";
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var commonPageOptions = [
  { title: "\u6587\u672C\u6846", value: "text" },
  { title: "\u5BC6\u7801", value: "password" },
  { title: "\u4E0B\u62C9\u6846", value: "list" },
  { title: "\u5355\u9009\u6846", value: "radio" },
  { title: "\u591A\u9009\u6846", value: "checkbox" },
  { title: "\u5F00\u5173", value: "switch" },
  { title: "\u65E5\u671F(yyyy-MM-dd)", value: "date" },
  { title: "\u65E5\u671F\uFF08yyyy-MM-dd HH:mm:ss\uFF09", value: "datetime" },
  { title: "\u65F6\u95F4\uFF08HH:mm:ss\uFF09", value: "time" },
  { title: "\u6587\u4EF6", value: "file" },
  { title: "\u56FE\u7247", value: "image" },
  { title: "\u591A\u884C\u6587\u672C", value: "textarea" },
  { title: "\u4E0B\u62C9\u591A\u9009\u6846", value: "list_multi" },
  { title: "\u4E0B\u62C9\u641C\u7D22\u6846", value: "sel_search" },
  { title: "Popup\u5F39\u6846", value: "popup" },
  { title: "\u5206\u7C7B\u5B57\u5178\u6811", value: "cat_tree" },
  { title: "\u90E8\u95E8\u9009\u62E9", value: "sel_depart" },
  { title: "\u7528\u6237\u9009\u62E9", value: "sel_user" },
  { title: "\u5BCC\u6587\u672C", value: "umeditor" },
  { title: "MarkDown", value: "markdown" },
  { title: "\u7701\u5E02\u533A\u7EC4\u4EF6", value: "pca" },
  { title: "\u8054\u52A8\u7EC4\u4EF6", value: "link_down" },
  { title: "\u81EA\u5B9A\u4E49\u6811\u63A7\u4EF6", value: "sel_tree" }
];
var subTablePageOptions = [
  { title: "\u6587\u672C\u6846", value: "text" },
  { title: "\u5355\u9009\u6846", value: "radio" },
  { title: "\u5F00\u5173", value: "switch" },
  { title: "\u65E5\u671F(yyyy-MM-dd)", value: "date" },
  { title: "\u65E5\u671F\uFF08yyyy-MM-dd HH:mm:ss\uFF09", value: "datetime" },
  { title: "\u65F6\u95F4\uFF08HH:mm:ss\uFF09", value: "time" },
  { title: "\u6587\u4EF6", value: "file" },
  { title: "\u56FE\u7247", value: "image" },
  { title: "\u4E0B\u62C9\u6846", value: "list" },
  { title: "\u4E0B\u62C9\u591A\u9009\u6846", value: "list_multi" },
  { title: "\u4E0B\u62C9\u641C\u7D22\u6846", value: "sel_search" },
  { title: "popup\u5F39\u51FA\u6846", value: "popup" },
  { title: "\u90E8\u95E8\u9009\u62E9", value: "sel_depart" },
  { title: "\u7528\u6237\u9009\u62E9", value: "sel_user" },
  { title: "\u591A\u884C\u6587\u672C", value: "textarea" }
];
var _sfc_main = defineComponent({
  name: "PageAttributeTable",
  components: {},
  setup() {
    const columns = ref([
      { title: "\u5B57\u6BB5\u540D\u79F0", key: "dbFieldName", width: 100 },
      { title: "\u5B57\u6BB5\u5907\u6CE8", key: "dbFieldTxt", width: 100 },
      {
        title: "\u8868\u5355\u663E\u793A",
        key: "isShowForm",
        width: 80,
        type: "checkbox" /* checkbox */,
        align: "center",
        customValue: ["1", "0"],
        defaultChecked: true
      },
      {
        title: "\u5217\u8868\u663E\u793A",
        key: "isShowList",
        width: 80,
        type: "checkbox" /* checkbox */,
        align: "center",
        customValue: ["1", "0"],
        defaultChecked: true
      },
      {
        title: "\u662F\u5426\u6392\u5E8F",
        key: "sortFlag",
        width: 80,
        type: "checkbox" /* checkbox */,
        align: "center",
        customValue: ["1", "0"],
        defaultChecked: false
      },
      {
        title: "\u662F\u5426\u53EA\u8BFB",
        key: "isReadOnly",
        width: 80,
        type: "checkbox" /* checkbox */,
        align: "center",
        customValue: ["1", "0"],
        defaultChecked: false
      },
      {
        title: "\u63A7\u4EF6\u7C7B\u578B",
        key: "fieldShowType",
        width: 170,
        type: "select" /* select */,
        options: commonPageOptions,
        defaultValue: "text",
        placeholder: "\u8BF7\u9009\u62E9${title}",
        validateRules: [
          { required: true, message: "\u8BF7\u9009\u62E9${title}" },
          { handler: validateFieldShowType }
        ]
      },
      {
        title: "\u63A7\u4EF6\u957F\u5EA6",
        key: "fieldLength",
        width: 120,
        type: "input-number" /* inputNumber */,
        defaultValue: 120,
        placeholder: "\u8BF7\u8F93\u5165${title}",
        validateRules: [{ required: true, message: "${title}\u4E0D\u80FD\u4E3A\u7A7A" }]
      },
      {
        title: "\u662F\u5426\u67E5\u8BE2",
        key: "isQuery",
        width: 80,
        type: "checkbox" /* checkbox */,
        align: "center",
        customValue: ["1", "0"],
        defaultChecked: false
      },
      {
        title: "\u67E5\u8BE2\u7C7B\u578B",
        key: "queryMode",
        width: 110,
        type: "select" /* select */,
        options: [
          { title: "\u666E\u901A\u67E5\u8BE2", value: "single" },
          { title: "\u8303\u56F4\u67E5\u8BE2", value: "group" }
        ],
        defaultValue: "single",
        placeholder: "\u8BF7\u9009\u62E9${title}",
        validateRules: [{ required: true, message: "\u8BF7\u9009\u62E9${title}" }]
      },
      {
        title: "\u63A7\u4EF6\u9ED8\u8BA4\u503C",
        key: "fieldDefaultValue",
        width: 180,
        type: "input" /* input */,
        defaultValue: ""
      },
      {
        title: "\u6269\u5C55\u53C2\u6570",
        key: "fieldExtendJson",
        width: 160,
        type: "input" /* input */,
        defaultValue: ""
      },
      {
        title: "\u81EA\u5B9A\u4E49\u8F6C\u6362\u5668",
        key: "converter",
        minWidth: 160,
        type: "input" /* input */,
        defaultValue: ""
      }
    ]);
    const setup = useTableSync(columns);
    const { tableRef, tables } = setup;
    function validateFieldShowType({ cellValue, row }, callback) {
      let { dbTable } = tables;
      let dbType = dbTable.value.tableRef.getTableData({ rowIds: [row.id] })[0].dbType;
      if (cellValue === "time" && dbType !== "string") {
        callback(false, "\u5F53\u63A7\u4EF6\u7C7B\u578B\u4E3A\u65F6\u95F4\u65F6,\u6570\u636E\u5E93\u5C5E\u6027\u91CC\u7684\u5B57\u6BB5\u7C7B\u578B\u5FC5\u987B\u662FString\uFF01");
      } else if (cellValue === "date" && dbType !== "Date" && dbType !== "Datetime") {
        callback(false, "\u5F53\u63A7\u4EF6\u7C7B\u578B\u4E3A\u65E5\u671F\u65F6\uFF0C\u6570\u636E\u5E93\u5C5E\u6027\u91CC\u7684\u5B57\u6BB5\u7C7B\u578B\u5FC5\u987B\u662FDate\u6216Datetime\uFF01");
      } else if (cellValue === "datetime" && dbType !== "Datetime") {
        callback(false, "\u5F53\u63A7\u4EF6\u7C7B\u578B\u4E3Adatetime\u65F6\uFF0C\u6570\u636E\u5E93\u5C5E\u6027\u91CC\u7684\u5B57\u6BB5\u7C7B\u578B\u5FC5\u987B\u662FDatetime\uFF01");
      } else {
        callback(true);
      }
    }
    function syncFieldShowType(row) {
      let showType = "date";
      if (row.dbType === "Datetime") {
        showType = "datetime";
      }
      tableRef.value.setValues([{
        rowKey: row.id,
        values: { fieldShowType: showType }
      }]);
    }
    function changePageType(flag) {
      for (let col of columns.value) {
        if (col.key == "fieldShowType") {
          col.options = !flag ? commonPageOptions : subTablePageOptions;
          break;
        }
      }
    }
    function enableQuery(id) {
      tableRef.value.setValues([{
        rowKey: id,
        values: { isQuery: "1" }
      }]);
    }
    return __spreadProps(__spreadValues({}, setup), { columns, enableQuery, syncFieldShowType, changePageType });
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_JVxeTable = resolveComponent("JVxeTable");
  return openBlock(), createBlock(_component_JVxeTable, {
    ref: "tableRef",
    rowNumber: "",
    keyboardEdit: "",
    maxHeight: _ctx.tableHeight.noToolbar,
    loading: _ctx.loading,
    columns: _ctx.columns,
    dataSource: _ctx.dataSource,
    disabledRows: { dbFieldName: ["id", "has_child"] }
  }, null, 8, ["maxHeight", "loading", "columns", "dataSource"]);
}
var PageAttributeTable = _export_sfc(_sfc_main, [["render", _sfc_render]]);

export {
  PageAttributeTable
};
//# sourceMappingURL=chunk-PVYVDTBU.js.map
