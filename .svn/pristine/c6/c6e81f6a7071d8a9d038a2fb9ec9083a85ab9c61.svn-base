{
  "version": 3,
  "sources": ["../../@jeecg/online/FileSelectModal.js"],
  "sourcesContent": ["var __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { defineComponent, ref, resolveComponent, openBlock, createBlock, withCtx, createVNode } from \"vue\";\nimport { defHttp } from \"/@/utils/http/axios\";\nimport { BasicModal, useModalInner } from \"/@/components/Modal\";\nimport { _ as _export_sfc } from \"./index.js\";\nimport \"/@/components/jeecg/OnLine/JPopupOnlReport.vue\";\nimport \"/@/hooks/web/useMessage\";\nimport \"vue-router\";\nconst _sfc_main = defineComponent({\n  name: \"FileSelectModal\",\n  components: { BasicModal },\n  emits: [\"select\", \"register\"],\n  setup(_, { emit }) {\n    const loading = ref(true);\n    const treeData = ref([]);\n    const selectedKey = ref(\"\");\n    const [registerModal, { closeModal }] = useModalInner(() => __async(this, null, function* () {\n      selectedKey.value = \"\";\n      if (treeData.value.length === 0) {\n        loadRoot();\n      }\n    }));\n    function onSubmit() {\n      emit(\"select\", selectedKey.value);\n      closeModal();\n    }\n    function onCancel() {\n      closeModal();\n    }\n    function loadRoot() {\n      return __async(this, null, function* () {\n        loading.value = true;\n        treeData.value = yield defHttp.get({ url: \"/online/cgform/head/rootFile\" }).finally(() => {\n          loading.value = false;\n        });\n      });\n    }\n    function onLoadData(treeNode) {\n      return __async(this, null, function* () {\n        if (treeNode.dataRef.children) {\n          return;\n        }\n        let params = {\n          parentPath: treeNode.dataRef.key\n        };\n        treeNode.dataRef.children = yield defHttp.get({ url: \"/online/cgform/head/fileTree\", params });\n        treeData.value = [...treeData.value];\n      });\n    }\n    function onSelect(selectedKeys) {\n      selectedKey.value = selectedKeys[0];\n    }\n    return { loading, treeData, onLoadData, onSelect, onSubmit, onCancel, registerModal };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_directory_tree = resolveComponent(\"a-directory-tree\");\n  const _component_a_spin = resolveComponent(\"a-spin\");\n  const _component_BasicModal = resolveComponent(\"BasicModal\");\n  return openBlock(), createBlock(_component_BasicModal, {\n    onRegister: _ctx.registerModal,\n    title: \"\\u9009\\u62E9\\u76EE\\u5F55\",\n    width: 500,\n    onOk: _ctx.onSubmit,\n    onCancel: _ctx.onCancel\n  }, {\n    default: withCtx(() => [\n      createVNode(_component_a_spin, { spinning: _ctx.loading }, {\n        default: withCtx(() => [\n          createVNode(_component_a_directory_tree, {\n            treeData: _ctx.treeData,\n            loadData: _ctx.onLoadData,\n            onSelect: _ctx.onSelect\n          }, null, 8, [\"treeData\", \"loadData\", \"onSelect\"])\n        ]),\n        _: 1\n      }, 8, [\"spinning\"])\n    ]),\n    _: 1\n  }, 8, [\"onRegister\", \"onOk\", \"onCancel\"]);\n}\nvar FileSelectModal = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { FileSelectModal as default };\n"],
  "mappings": "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",
  "names": []
}
