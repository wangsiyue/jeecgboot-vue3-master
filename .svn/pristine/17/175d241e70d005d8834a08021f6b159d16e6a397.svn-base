{
  "version": 3,
  "sources": ["../../../src/hooks/core/onMountedOrActivated.ts", "../../../src/components/Form/src/utils/Area.ts", "../../../src/components/Preview/index.ts", "../../../src/components/Preview/src/functional.ts", "../../@jeecg/online/useTableColumns.js"],
  "sourcesContent": ["import { nextTick, onMounted, onActivated } from 'vue';\n\nexport function onMountedOrActivated(hook: Fn) {\n  let mounted: boolean;\n\n  onMounted(() => {\n    hook();\n    nextTick(() => {\n      mounted = true;\n    });\n  });\n\n  onActivated(() => {\n    if (mounted) {\n      hook();\n    }\n  });\n}\n", "import REGION_DATA from 'china-area-data';\n\n/**\n * Area \u5C5E\u6027all\u7684\u7C7B\u578B\n */\ninterface PlainPca {\n  id: string;\n  text: string;\n  pid: string;\n  index: Number;\n}\n\n/**\n * \u7701\u5E02\u533A\u5DE5\u5177\u7C7B -\u89E3\u51B3\u5217\u8868\u7701\u5E02\u533A\u7EC4\u4EF6\u7684\u7FFB\u8BD1\u95EE\u9898\n */\nclass Area {\n  all: PlainPca[];\n\n  /**\n   * \u6784\u9020\u5668\n   * @param express\n   */\n  constructor(pcaa?) {\n    if (!pcaa) {\n      pcaa = REGION_DATA;\n    }\n    let arr: PlainPca[] = [];\n    const province = pcaa['86'];\n    Object.keys(province).map((key) => {\n      arr.push({ id: key, text: province[key], pid: '86', index: 1 });\n      const city = pcaa[key];\n      Object.keys(city).map((key2) => {\n        arr.push({ id: key2, text: city[key2], pid: key, index: 2 });\n        const qu = pcaa[key2];\n        if (qu) {\n          Object.keys(qu).map((key3) => {\n            arr.push({ id: key3, text: qu[key3], pid: key2, index: 3 });\n          });\n        }\n      });\n    });\n    this.all = arr;\n  }\n\n  get pca() {\n    return this.all;\n  }\n\n  getCode(text) {\n    if (!text || text.length == 0) {\n      return '';\n    }\n    for (let item of this.all) {\n      if (item.text === text) {\n        return item.id;\n      }\n    }\n  }\n\n  getText(code) {\n    if (!code || code.length == 0) {\n      return '';\n    }\n    let arr = [];\n    this.getAreaBycode(code, arr, 3);\n    return arr.join('/');\n  }\n\n  getRealCode(code) {\n    let arr = [];\n    this.getPcode(code, arr, 3);\n    return arr;\n  }\n\n  getPcode(id, arr, index) {\n    for (let item of this.all) {\n      if (item.id === id && item.index == index) {\n        arr.unshift(id);\n        if (item.pid != '86') {\n          this.getPcode(item.pid, arr, --index);\n        }\n      }\n    }\n  }\n\n  getAreaBycode(code, arr, index) {\n    for (let item of this.all) {\n      if (item.id === code && item.index == index) {\n        arr.unshift(item.text);\n        if (item.pid != '86') {\n          this.getAreaBycode(item.pid, arr, --index);\n        }\n      }\n    }\n  }\n}\nconst jeecgAreaData = new Area();\n\n// \u6839\u636Ecode\u627E\u6587\u672C\nconst getAreaTextByCode = function (code) {\n  //update-begin-author:liusq---date:20220531--for: \u5224\u65ADcode\u662F\u5426\u662F\u591Acode\u9017\u53F7\u5206\u5272\u7684\u5B57\u7B26\u4E32\uFF0C\u662F\u7684\u8BDD\uFF0C\u83B7\u53D6\u6700\u540E\u4E00\u4F4D\u7684code ---\n  if (code && code.includes(',')) {\n    code = code.substr(code.lastIndexOf(',') + 1);\n  }\n  //update-end-author:liusq---date:20220531--for: \u5224\u65ADcode\u662F\u5426\u662F\u591Acode\u9017\u53F7\u5206\u5272\u7684\u5B57\u7B26\u4E32\uFF0C\u662F\u7684\u8BDD\uFF0C\u83B7\u53D6\u6700\u540E\u4E00\u4F4D\u7684code ---\n  return jeecgAreaData.getText(code);\n};\n\nexport { getAreaTextByCode };\n", "export { default as ImagePreview } from './src/Preview.vue';\nexport { createImgPreview } from './src/functional';\n", "import type { Options, Props } from './typing';\nimport ImgPreview from './Functional.vue';\nimport { isClient } from '/@/utils/is';\nimport { createVNode, render } from 'vue';\n\nlet instance: ReturnType<typeof createVNode> | null = null;\n\nexport function createImgPreview(options: Options) {\n  if (!isClient) return;\n  const propsData: Partial<Props> = {};\n  const container = document.createElement('div');\n  Object.assign(propsData, { show: true, index: 0, scaleStep: 100 }, options);\n\n  instance = createVNode(ImgPreview, propsData);\n  render(instance, container);\n  document.body.appendChild(container);\n  return instance.component?.exposed;\n}\n", "var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nimport { E as ENHANCEJS, c as SETUP } from \"./FormSchemaFactory.js\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport * as vue from \"vue\";\nimport { ref, onBeforeUnmount, toRaw, nextTick, reactive, computed, unref, h, defineAsyncComponent, watch } from \"vue\";\nimport * as UTIL_AXIOS from \"/@/utils/http/axios\";\nimport { defHttp } from \"/@/utils/http/axios\";\nimport * as HOOK_MESSAGE from \"/@/hooks/web/useMessage\";\nimport { useMessage } from \"/@/hooks/web/useMessage\";\nimport { randomString, filterObj, getFileAccessHttpUrl } from \"/@/utils/common/compUtils\";\nimport * as UTIL_CACHE from \"/@/utils/cache\";\nimport { onMountedOrActivated } from \"/@/hooks/core/onMountedOrActivated\";\nimport { useModal } from \"/@/components/Modal\";\nimport { Modal } from \"ant-design-vue\";\nimport { useMethods } from \"/@/hooks/system/useMethods\";\nimport { p as pick } from \"./pick.js\";\nimport { filterMultiDictText } from \"/@/utils/dict/JDictSelectUtil\";\nimport { getAreaTextByCode } from \"/@/components/Form/src/utils/Area\";\nimport { createImgPreview } from \"/@/components/Preview/index\";\nconst $exports = {\n  vue,\n  \"@\": {\n    hooks: {\n      useMessage: HOOK_MESSAGE\n    },\n    utils: {\n      axios: UTIL_AXIOS,\n      cache: UTIL_CACHE\n    }\n  }\n};\nfunction useCustomHook(otherExports, context) {\n  const assignExports = Object.assign({}, $exports, otherExports);\n  function doImport(path) {\n    if (path != null && path != \"\") {\n      let paths = path.toString().split(\"/\");\n      let result = assignExports[paths[0]];\n      for (let i = 1; i < paths.length; i++) {\n        result = result[paths[i]];\n      }\n      return result;\n    }\n    return null;\n  }\n  function doExport() {\n  }\n  function executeJsEnhanced(code) {\n    let randomKey = randomString(6);\n    let exportKey = \"__export_\" + randomKey;\n    const executeCode = `return function (customImport, ${exportKey}) {\"use strict\"; ${code}}`;\n    console.group(\"executeJsEnhanced\");\n    console.log(executeCode);\n    console.groupEnd();\n    const fun = new Function(executeCode)();\n    fun.call(context, doImport, doExport);\n  }\n  return {\n    executeJsEnhanced\n  };\n}\nconst CONTEXT_PROP_DESCRIPTION = {\n  acceptHrefParams: \"<p> \\u8DF3\\u8F6C\\u65F6\\u83B7\\u53D6\\u7684\\u53C2\\u6570\\u4FE1\\u606F\",\n  currentPage: \"<p> \\u5F53\\u524D\\u9875\\u6570\",\n  currentTableName: \"<p> \\u5F53\\u524D\\u8868\\u540D\",\n  description: \"<p> \\u5F53\\u524D\\u8868\\u63CF\\u8FF0\",\n  hasChildrenField: \"<p> \\u662F\\u5426\\u6709\\u5B50\\u8282\\u70B9\\u7684\\u5B57\\u6BB5\\u540D\\uFF0C\\u4EC5\\u6811\\u5F62\\u8868\\u5355\\u4E0B\\u6709\\u6548\",\n  isDesForm: \"<p> xx\",\n  isTree: \"<m> \\u662F\\u5426\\u662F\\u6811\\u5F62\\u8868\\u5355 \",\n  loadData: \"<m> \\u52A0\\u8F7D\\u5217\\u8868\\u6570\\u636E\",\n  pageSize: \"<p> \\u6BCF\\u4E00\\u9875\\u663E\\u793A\\u6761\\u6570\",\n  queryParam: \"<p> \\u67E5\\u8BE2\\u6761\\u4EF6\\u5BF9\\u8C61\\uFF0C\\u6BCF\\u6B21\\u70B9\\u51FB\\u67E5\\u8BE2\\u540E\\u624D\\u4F1A\\u66F4\\u65B0\\u6B64\\u6570\\u636E\",\n  selectedRowKeys: \"<p> \\u9009\\u4E2D\\u7684\\u884C\\u7684id\\u6570\\u7EC4\",\n  sortField: \"<p> \\u6392\\u5E8F\\u5B57\\u6BB5\",\n  sortType: \"<p> \\u6392\\u5E8F\\u89C4\\u5219\",\n  total: \"<p> \\u603B\\u9875\\u6570\"\n};\nconst onlineUrl = {\n  getColumns: \"/online/cgform/api/getColumns/\",\n  getQueryInfo: \"/online/cgform/api/getQueryInfo/\",\n  getData: \"/online/cgform/api/getData/\",\n  getTreeData: \"/online/cgform/api/getTreeData/\",\n  optPre: \"/online/cgform/api/form/\",\n  buttonAction: \"/online/cgform/api/doButton\",\n  exportXls: \"/online/cgform/api/exportXls/\",\n  importXls: \"/online/cgform/api/importXls/\",\n  startProcess: \"/act/process/extActProcess/startMutilProcess\"\n};\nlet config = {\n  sortField: \"id\",\n  sortType: \"asc\",\n  currentPage: 1,\n  pageSize: 10,\n  total: 0,\n  selectedRowKeys: [],\n  queryParam: {},\n  acceptHrefParams: {},\n  description: \"\",\n  currentTableName: \"\",\n  isDesForm: false,\n  desFormCode: \"\",\n  cache: false,\n  isTree: false,\n  hasChildrenField: \"\"\n};\nconst metaPagination = {\n  current: 1,\n  pageSize: 10,\n  pageSizeOptions: [\"10\", \"20\", \"30\"],\n  showTotal: (total, range) => {\n    return range[0] + \"-\" + range[1] + \" \\u5171\" + total + \"\\u6761\";\n  },\n  showQuickJumper: true,\n  showSizeChanger: true,\n  total: 0\n};\nconst { createMessage: $message } = useMessage();\nconst GET_FUN_BODY_REG = /(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*?\\r?\\n|[^{])+\\{([\\s\\S]*)\\}$/;\nfunction useOnlineTableContext() {\n  console.log(\"-------------------------useOnlineTableContext----------------------->\");\n  const ID = ref(\"\");\n  const route = useRoute();\n  const onlineQueryFormOuter = ref();\n  const superQueryButtonRef = ref();\n  const pagination = ref(false);\n  const dataSource = ref([]);\n  let specialConfigMap = {};\n  const methods = {\n    execButtonEnhance: function(code, record2) {\n      if (onlineTableContext2[ENHANCEJS][code]) {\n        if (SETUP === code) {\n          executeEnhanceJsHook(code);\n        } else {\n          let row = toRaw(record2);\n          return onlineTableContext2[ENHANCEJS][code].call(onlineTableContext2, onlineTableContext2, row);\n        }\n      } else if (onlineTableContext2[ENHANCEJS][code + \"_hook\"]) {\n        executeEnhanceJsHook(code + \"_hook\");\n      } else {\n        console.log(\"\\u589E\\u5F3A\\u6CA1\\u627E\\u5230!\", code);\n      }\n    },\n    isTree: function(status) {\n      if (typeof status === \"boolean\") {\n        onlineTableContext2[\"isTreeTable\"] = status;\n        return status;\n      } else {\n        return onlineTableContext2[\"isTreeTable\"];\n      }\n    }\n  };\n  function executeEnhanceJsHook(code) {\n    let str = onlineTableContext2[ENHANCEJS][code].toLocaleString();\n    let arr = str.match(GET_FUN_BODY_REG);\n    if (arr.length > 1) {\n      let temp = arr[1];\n      executeJsEnhanced(temp);\n    }\n  }\n  const onlineTableContext2 = new Proxy(CONTEXT_PROP_DESCRIPTION, {\n    get(_target, prop) {\n      if (typeof methods[prop] === \"function\") {\n        return methods[prop];\n      } else {\n        let temp = specialConfigMap[ID.value];\n        return Reflect.get(temp, prop);\n      }\n    },\n    set(_target, prop, value) {\n      let temp = getCurrentPageSpecialConfigMap();\n      if (typeof value === \"function\") {\n        return Reflect.set(methods, prop, value);\n      } else {\n        return Reflect.set(temp, prop, value);\n      }\n    },\n    deleteProperty(_target, key) {\n      if (key === ID.value) {\n        delete specialConfigMap[key];\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n  const { executeJsEnhanced } = useCustomHook({}, onlineTableContext2);\n  function getTableId() {\n    let idValue = route.params.id;\n    if (!idValue) {\n      idValue = \"\";\n    }\n    return idValue;\n  }\n  onMountedOrActivated(() => {\n    console.log(\"-------------------onMountedOrActivated-------------------\");\n    handlePageChange();\n  });\n  onBeforeUnmount(() => {\n    console.log(\"-------------------onBeforeUnmount-------------------\");\n    delete specialConfigMap[ID.value];\n  });\n  function getCurrentPageSpecialConfigMap() {\n    let temp = specialConfigMap[ID.value];\n    if (!temp) {\n      let obj = Object.assign({}, config, { onlineUrl });\n      temp = JSON.parse(JSON.stringify(obj));\n      specialConfigMap[ID.value] = temp;\n    }\n    return temp;\n  }\n  function handleAcceptHrefParams() {\n    let acceptHrefParams = {};\n    let hrefParam = route.query;\n    if (hrefParam) {\n      Object.keys(hrefParam).map((key) => {\n        acceptHrefParams[key] = hrefParam[key];\n      });\n      onlineTableContext2[\"acceptHrefParams\"] = acceptHrefParams;\n    }\n  }\n  function getColumnList() {\n    return new Promise((resolve, reject) => {\n      defHttp.get({\n        url: `${onlineTableContext2.onlineUrl.getColumns}${ID.value}`\n      }, { isTransformResponse: false }).then((res) => {\n        if (res.success) {\n          resolve(res.result);\n        } else {\n          $message.warning(res.message);\n          reject();\n        }\n      }).catch(() => {\n        reject();\n      });\n    });\n  }\n  function loadData() {\n    return new Promise((resolve, reject) => {\n      let url = `${onlineTableContext2.onlineUrl.getData}${ID.value}`;\n      if (onlineTableContext2.isTree() === true) {\n        url = `${onlineTableContext2.onlineUrl.getTreeData}${ID.value}`;\n      }\n      let params = getLoadDataParams();\n      console.log(\"------\\u67E5\\u8BE2\\u53C2\\u6570-----\", params);\n      defHttp.get({ url, params }, { isTransformResponse: false }).then((res) => {\n        console.log(\"--onlineList-\\u67E5\\u8BE2\\u5217\\u8868\\u6570\\u636E\", res);\n        if (res.success) {\n          handleDataResult(res.result);\n          resolve(true);\n        } else {\n          $message.warning(res.message);\n          reject(false);\n        }\n      }).catch(() => {\n        let error = \"\\u8BF7\\u6C42\\u5217\\u8868\\u6570\\u636E\\u5F02\\u5E38!\";\n        $message.warning(error);\n        reject(false);\n      });\n    });\n  }\n  function getLoadDataParams() {\n    const { sortField, sortType, acceptHrefParams, queryParam } = onlineTableContext2;\n    let treeParam = {};\n    if (onlineTableContext2.isTree() === true) {\n      treeParam[\"hasQuery\"] = \"false\";\n    } else {\n      treeParam[\"hasQuery\"] = \"true\";\n    }\n    let params = Object.assign({}, treeParam, acceptHrefParams, queryParam, { column: sortField, order: sortType });\n    if (pagination.value) {\n      params.pageNo = pagination.value.current;\n      params.pageSize = pagination.value.pageSize;\n    } else {\n      params[\"pageSize\"] = -521;\n    }\n    let superQueryData = getSuperQueryData();\n    params.superQueryMatchType = superQueryData.matchType || \"\";\n    params.superQueryParams = superQueryData.params || \"\";\n    return filterObj(params);\n  }\n  function handleDataResult(result) {\n    let total = 0;\n    if (Number(result.total) > 0) {\n      if (onlineTableContext2.isTree() === true) {\n        dataSource.value = getTreeDataByResult(result.records);\n        nextTick(() => {\n          loadDataByExpandedRows(dataSource.value);\n        });\n      } else {\n        dataSource.value = result.records;\n      }\n      total = Number(result.total);\n    } else {\n      dataSource.value = [];\n    }\n    if (pagination.value) {\n      pagination.value = __spreadProps(__spreadValues({}, pagination.value), { total });\n    }\n  }\n  function handleChangeInTable($pagination, _filters, sorter) {\n    if (sorter && sorter.order) {\n      onlineTableContext2[\"sortField\"] = sorter.field;\n      onlineTableContext2[\"sortType\"] = sorter.order == \"ascend\" ? \"asc\" : \"desc\";\n    } else {\n      onlineTableContext2[\"sortField\"] = \"id\";\n      onlineTableContext2[\"sortType\"] = \"asc\";\n    }\n    if (pagination.value) {\n      pagination.value = $pagination;\n    }\n    loadData();\n  }\n  function handleSpecialConfig(result) {\n    onlineTableContext2[\"description\"] = result.description;\n    onlineTableContext2[\"currentTableName\"] = result.currentTableName;\n    onlineTableContext2[\"isDesForm\"] = result.isDesForm;\n    onlineTableContext2[\"desFormCode\"] = result.desFormCode;\n    onlineTableContext2[\"ID\"] = ID.value;\n    let { acceptHrefParams, queryParam, superQuery, currentPage, pageSize } = onlineTableContext2;\n    handleAcceptHrefParams();\n    if (!queryParam) {\n      onlineTableContext2[\"queryParam\"] = {};\n    } else {\n      onlineQueryFormOuter.value.initDefaultValues(queryParam, acceptHrefParams);\n    }\n    if (!superQuery) {\n      onlineTableContext2[\"superQuery\"] = { params: \"\", matchType: \"\" };\n    } else {\n      superQueryButtonRef.value.initDefaultValues(superQuery);\n    }\n    if (result.paginationFlag == \"Y\") {\n      pagination.value = __spreadValues(__spreadValues({}, metaPagination), { current: currentPage, pageSize });\n    } else {\n      pagination.value = false;\n    }\n  }\n  const add2Context = {\n    loadData,\n    getLoadDataParams\n  };\n  Object.keys(add2Context).map((key) => {\n    onlineTableContext2[key] = add2Context[key];\n  });\n  let loading = ref(false);\n  function reload() {\n    return __async(this, null, function* () {\n      if (pagination.value) {\n        pagination.value = __spreadProps(__spreadValues({}, pagination.value), { current: 1 });\n      }\n      onlineTableContext2.clearSelectedRow();\n      yield loadData();\n    });\n  }\n  function getTreeDataByResult(result) {\n    if (result) {\n      return result.map((item) => {\n        let hasChildrenField = onlineTableContext2[\"hasChildrenField\"];\n        if (item[hasChildrenField] == \"1\") {\n          let loadChild = { id: item.id + \"_loadChild\", name: \"loading...\", isLoading: true };\n          loadChild[\"jeecg_row_key\"] = loadChild.id;\n          item.children = [loadChild];\n        }\n        return item;\n      });\n    }\n  }\n  const expandedRowKeys = ref([]);\n  function handleExpandedRowsChange(expandedRowKeysValue) {\n    expandedRowKeys.value = expandedRowKeysValue;\n  }\n  function loadDataByExpandedRows(dataList) {\n    let expandedRowKeysValue = expandedRowKeys.value;\n    if (expandedRowKeysValue.length > 0) {\n      const { sortField, sortType, pidField } = onlineTableContext2;\n      let params = Object.assign({}, { column: sortField, order: sortType });\n      params[\"hasQuery\"] = \"in\";\n      let superParams = Object.assign({});\n      superParams.rule = \"in\";\n      superParams.type = \"text\";\n      superParams.val = expandedRowKeysValue.join(\",\");\n      superParams.field = pidField;\n      superParams = [superParams];\n      params[\"superQueryParams\"] = encodeURI(JSON.stringify(superParams));\n      params[\"superQueryMatchType\"] = \"and\";\n      params[\"batchFlag\"] = \"true\";\n      let url = `${onlineTableContext2.onlineUrl.getTreeData}${ID.value}`;\n      console.log(\"--onlineList-\\u67E5\\u8BE2\\u5B50\\u8282\\u70B9\\u53C2\\u6570\", superParams);\n      defHttp.get({ url, params }, { isTransformResponse: false }).then((res) => {\n        console.log(\"--onlineList-\\u67E5\\u8BE2\\u5B50\\u8282\\u70B9\\u5217\\u8868\\u6570\\u636E\", res);\n        if (res.success && res.result.records && res.result.records.length > 0) {\n          let records = res.result.records;\n          const listMap = /* @__PURE__ */ new Map();\n          for (let item of records) {\n            let pid = item[pidField];\n            if (expandedRowKeysValue.join(\",\").includes(pid)) {\n              let mapList = listMap.get(pid);\n              if (mapList == null) {\n                mapList = [];\n              }\n              mapList.push(item);\n              listMap.set(pid, mapList);\n            }\n          }\n          let childrenMap = listMap;\n          let fn = (list) => {\n            if (list) {\n              list.forEach((data) => {\n                if (expandedRowKeysValue.includes(data.id)) {\n                  data.children = getTreeDataByResult(childrenMap.get(data.id));\n                  fn(data.children);\n                }\n              });\n            }\n          };\n          fn(dataList);\n        }\n      }).catch(() => {\n        let error = \"loadDataByExpandedRows\\u8BF7\\u6C42\\u5217\\u8868\\u6570\\u636E\\u5F02\\u5E38!\";\n        $message.warning(error);\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n  function getSuperQueryData() {\n    if (!onlineTableContext2.superQuery) {\n      return {};\n    }\n    const { superQuery: { params, matchType }, currentTableName } = onlineTableContext2;\n    let pre = currentTableName + \"@\";\n    let arr = [];\n    if (params.length > 0) {\n      for (let data of params) {\n        let item = __spreadValues({}, data);\n        let field2 = item.field;\n        if (field2.startsWith(pre)) {\n          item.field = field2.replace(pre, \"\");\n        }\n        arr.push(item);\n      }\n    }\n    let str = arr.length > 0 ? JSON.stringify(arr) : \"\";\n    console.log(\"\\u9AD8\\u7EA7\\u67E5\\u8BE2\\u6761\\u4EF6\", arr, matchType);\n    return {\n      params: encodeURIComponent(str),\n      matchType\n    };\n  }\n  const superQueryStatus = ref(false);\n  function handleSuperQuery(params, matchType) {\n    onlineTableContext2[\"superQuery\"] = {\n      params,\n      matchType\n    };\n    if (params.length == 0) {\n      superQueryStatus.value = false;\n    } else {\n      superQueryStatus.value = true;\n    }\n    loadData();\n  }\n  const [registerCustomModal, { openModal: doOpenCustomModal }] = useModal();\n  function openCustomModal(param) {\n    if (!param) {\n      param = {};\n    }\n    if (!param.row) {\n      let rows = onlineTableContext2[\"selectedRows\"];\n      if (!rows || rows.length == 0 || rows.length > 1) {\n        $message.warning(\"\\u8BF7\\u9009\\u62E9\\u4E00\\u6761\\u6570\\u636E\");\n        return;\n      }\n      param.row = rows[0];\n    }\n    param[\"code\"] = ID.value;\n    doOpenCustomModal(true, param);\n  }\n  onlineTableContext2[\"openCustomModal\"] = openCustomModal;\n  function handlePageChange() {\n    let idValue = getTableId();\n    ID.value = idValue;\n  }\n  handlePageChange();\n  return __spreadValues({\n    ID,\n    onlineQueryFormOuter,\n    superQueryButtonRef,\n    loading,\n    reload,\n    dataSource,\n    pagination,\n    handleSpecialConfig,\n    onlineTableContext: onlineTableContext2,\n    handleChangeInTable,\n    getColumnList,\n    getTreeDataByResult,\n    expandedRowKeys,\n    handleExpandedRowsChange,\n    superQueryStatus,\n    handleSuperQuery,\n    registerCustomModal\n  }, add2Context);\n}\nconst FLOW_CODE_PRE = \"onl_\";\nfunction useListButton(onlineTableContext2) {\n  const buttonStatus = {\n    add: true,\n    addSub: true,\n    update: true,\n    delete: true,\n    batch_delete: true,\n    import: true,\n    export: true,\n    detail: true,\n    super_query: true,\n    bpm: true\n  };\n  const [registerModal, { openModal }] = useModal();\n  const [registerImportModal, { openModal: openImportModal }] = useModal();\n  const { createMessage: $message2 } = useMessage();\n  const buttonSwitch = reactive(buttonStatus);\n  const cgLinkButtonList = reactive([]);\n  const cgTopButtonList = reactive([]);\n  function initButtonList(btnList) {\n    cgLinkButtonList.length = 0;\n    cgTopButtonList.length = 0;\n    if (btnList && btnList.length > 0) {\n      for (let i = 0; i < btnList.length; i++) {\n        let temp = pick(btnList[i], \"buttonCode\", \"buttonName\", \"buttonStyle\", \"optType\", \"exp\", \"buttonIcon\");\n        if (temp.buttonStyle == \"button\") {\n          cgTopButtonList.push(temp);\n        } else if (temp.buttonStyle == \"link\") {\n          cgLinkButtonList.push(temp);\n        }\n      }\n    }\n  }\n  function initButtonSwitch(hideColumns) {\n    Object.keys(buttonSwitch).forEach((key) => {\n      buttonSwitch[key] = true;\n    });\n    if (hideColumns && hideColumns.length > 0) {\n      Object.keys(buttonSwitch).forEach((key) => {\n        if (hideColumns.indexOf(key) >= 0) {\n          buttonSwitch[key] = false;\n        }\n      });\n    }\n  }\n  function handleAdd(param) {\n    let data = { isUpdate: false };\n    if (param) {\n      data[\"param\"] = param;\n    }\n    openModal(true, data);\n  }\n  function handleEdit(record2) {\n    onlineTableContext2.beforeEdit(record2).then(() => {\n      openModal(true, {\n        isUpdate: true,\n        record: record2\n      });\n    }).catch((msg) => {\n      $message2.warning(msg);\n    });\n  }\n  const getDeleteButton = (record2) => {\n    return {\n      label: \"\\u5220\\u9664\",\n      popConfirm: {\n        title: \"\\u662F\\u5426\\u5220\\u9664\\uFF1F\",\n        confirm: handleDeleteOne.bind(null, record2)\n      }\n    };\n  };\n  function handleDeleteOne(record2) {\n    onlineTableContext2.beforeDelete(record2).then(() => {\n      handleDelete(record2.id);\n    }).catch((msg) => {\n      $message2.warning(msg);\n    });\n  }\n  function getActions(record2) {\n    if (toRaw(buttonSwitch.update) === true) {\n      return [\n        {\n          label: \"\\u7F16\\u8F91\",\n          onClick: handleEdit.bind(null, record2)\n        }\n      ];\n    }\n    return [];\n  }\n  function getSubmitFlowButton(record2) {\n    return {\n      label: \"\\u63D0\\u4EA4\\u6D41\\u7A0B\",\n      popConfirm: {\n        title: \"\\u786E\\u8BA4\\u63D0\\u4EA4\\u6D41\\u7A0B\\u5417\\uFF1F\",\n        confirm: handleSubmitFlow.bind(null, record2)\n      }\n    };\n  }\n  function getDropDownActions(record2) {\n    let arr = [];\n    if (toRaw(buttonSwitch.delete) === true) {\n      arr.push({\n        label: \"\\u8BE6\\u60C5\",\n        onClick: handleDetail.bind(null, record2)\n      });\n    }\n    if (onlineTableContext2[\"hasBpmStatus\"] === true) {\n      arr.push(getSubmitFlowButton(record2));\n    }\n    if (toRaw(buttonSwitch.delete) === true) {\n      arr.push(getDeleteButton(record2));\n    }\n    let buttonList = cgLinkButtonList;\n    if (buttonList && buttonList.length > 0) {\n      for (let item of buttonList) {\n        if (showLinkButtonOfExpression(item.exp || \"\", record2) === true) {\n          arr.push({\n            label: item.buttonName,\n            onClick: cgButtonLinkHandler.bind(null, record2, item.buttonCode, item.optType)\n          });\n        }\n      }\n    }\n    return arr;\n  }\n  function handleDetail(record2) {\n    openModal(true, {\n      isUpdate: true,\n      disableSubmit: true,\n      record: record2\n    });\n  }\n  function startProcess(record2) {\n    const { currentTableName, onlineUrl: { startProcess: startProcess2 } } = onlineTableContext2;\n    let postConfig = {\n      url: startProcess2,\n      params: {\n        flowCode: FLOW_CODE_PRE + currentTableName,\n        id: record2.id,\n        formUrl: \"modules/bpm/task/form/OnlineFormDetail\",\n        formUrlMobile: \"check/onlineForm/detail\"\n      }\n    };\n    let postOption = { isTransformResponse: false };\n    return new Promise((resolve, reject) => {\n      defHttp.post(postConfig, postOption).then((res) => {\n        if (res.success) {\n          resolve(res);\n          $message2.success(res.message);\n        } else {\n          reject();\n          $message2.warning(res.message);\n        }\n      });\n    });\n  }\n  function handleSubmitFlow(record2) {\n    return __async(this, null, function* () {\n      yield startProcess(record2);\n      onlineTableContext2.loadData();\n    });\n  }\n  function handleDelete(dataId) {\n    console.log(\"\\u5220\\u9664\\u6570\\u636Eid\\u503C\", dataId);\n    let url = `${onlineTableContext2.onlineUrl.optPre}${onlineTableContext2.ID}/${dataId}`;\n    return new Promise((resolve, reject) => {\n      defHttp.delete({\n        url\n      }, { isTransformResponse: false }).then((res) => {\n        if (res.success) {\n          $message2.success(res.message);\n          onlineTableContext2.loadData();\n          resolve(true);\n        } else {\n          $message2.warning(res.message);\n          reject();\n        }\n      });\n    });\n  }\n  function handleBatchDelete() {\n    let arr = onlineTableContext2[\"selectedRowKeys\"];\n    if (arr.length <= 0) {\n      $message2.warning(\"\\u8BF7\\u9009\\u62E9\\u4E00\\u6761\\u8BB0\\u5F55\\uFF01\");\n      return false;\n    } else {\n      let idSet = [];\n      arr.forEach(function(val) {\n        let temp = val;\n        if (temp && temp.endsWith(\"_loadChild\")) {\n          temp = temp.replace(\"_loadChild\", \"\");\n        }\n        if (idSet.indexOf(temp) < 0) {\n          idSet.push(temp);\n        }\n      });\n      let ids = idSet.join(\",\");\n      Modal.confirm({\n        title: \"\\u786E\\u8BA4\\u5220\\u9664\",\n        content: \"\\u662F\\u5426\\u5220\\u9664\\u9009\\u4E2D\\u6570\\u636E\",\n        okText: \"\\u786E\\u8BA4\",\n        cancelText: \"\\u53D6\\u6D88\",\n        onOk: () => __async(this, null, function* () {\n          yield handleDelete(ids);\n          onlineTableContext2.clearSelectedRow();\n        })\n      });\n    }\n  }\n  function cgButtonLinkHandler(record2, buttonCode, optType) {\n    if (optType == \"js\") {\n      onlineTableContext2[\"execButtonEnhance\"](buttonCode, record2);\n    } else if (optType == \"action\") {\n      let params = {\n        formId: onlineTableContext2[\"ID\"],\n        buttonCode,\n        dataId: record2.id\n      };\n      let url = `${onlineTableContext2.onlineUrl.buttonAction}`;\n      defHttp.post({\n        url,\n        params\n      }, { isTransformResponse: false }).then((res) => {\n        if (res.success) {\n          onlineTableContext2.loadData();\n          $message2.success(\"\\u5904\\u7406\\u5B8C\\u6210!\");\n        } else {\n          $message2.warning(res.message);\n        }\n      });\n    }\n  }\n  function cgButtonJsHandler(buttonCode) {\n    onlineTableContext2[\"execButtonEnhance\"](buttonCode);\n  }\n  function cgButtonActionHandler(buttonCode) {\n    let arr = onlineTableContext2[\"selectedRowKeys\"];\n    if (!arr || arr.length == 0) {\n      $message2.warning(\"\\u8BF7\\u5148\\u9009\\u4E2D\\u4E00\\u6761\\u8BB0\\u5F55\");\n      return false;\n    }\n    let dataId = arr.join(\",\");\n    let params = {\n      formId: onlineTableContext2[\"ID\"],\n      buttonCode,\n      dataId\n    };\n    let url = `${onlineTableContext2.onlineUrl.buttonAction}`;\n    defHttp.post({\n      url,\n      params\n    }, { isTransformResponse: false }).then((res) => {\n      if (res.success) {\n        onlineTableContext2.loadData();\n        onlineTableContext2.clearSelectedRow();\n        $message2.success(\"\\u5904\\u7406\\u5B8C\\u6210!\");\n      } else {\n        $message2.warning(res.message);\n      }\n    });\n  }\n  function onImportExcel() {\n    openImportModal(true);\n  }\n  const importUrl = () => {\n    return `${onlineTableContext2.onlineUrl.importXls}${onlineTableContext2.ID}`;\n  };\n  const { handleExportXlsx } = useMethods();\n  function onExportExcel() {\n    let params = onlineTableContext2.getLoadDataParams();\n    let selections = onlineTableContext2[\"selectedRowKeys\"];\n    if (selections && selections.length > 0) {\n      params[\"selections\"] = selections.join(\",\");\n    }\n    let paramsStr = JSON.stringify(filterObj(params));\n    let url = `${onlineTableContext2.onlineUrl.exportXls}${onlineTableContext2.ID}`;\n    const description = onlineTableContext2.description;\n    handleExportXlsx(description, url, { paramsStr });\n  }\n  function showLinkButtonOfExpression(expression, row) {\n    if (!expression || expression == \"\") {\n      return true;\n    }\n    let arr = expression.split(\"#\");\n    let fieldValue = row[arr[0]];\n    let exp = arr[1].toLowerCase();\n    if (exp === \"eq\") {\n      return fieldValue == arr[2];\n    } else if (exp === \"ne\") {\n      return !(fieldValue == arr[2]);\n    } else if (exp === \"empty\") {\n      if (arr[2] === \"true\") {\n        return !fieldValue || fieldValue == \"\";\n      } else {\n        return fieldValue && fieldValue.length > 0;\n      }\n    } else if (exp === \"in\") {\n      let arr2 = arr[2].split(\",\");\n      return arr2.indexOf(String(fieldValue)) >= 0;\n    }\n    return false;\n  }\n  return {\n    buttonSwitch,\n    cgLinkButtonList,\n    cgTopButtonList,\n    importUrl,\n    registerModal,\n    handleAdd,\n    handleEdit,\n    handleBatchDelete,\n    registerImportModal,\n    onImportExcel,\n    onExportExcel,\n    getDropDownActions,\n    getActions,\n    cgButtonJsHandler,\n    cgButtonActionHandler,\n    cgButtonLinkHandler,\n    initButtonList,\n    initButtonSwitch,\n    getDeleteButton,\n    handleSubmitFlow,\n    getSubmitFlowButton\n  };\n}\nfunction useTableColumns(onlineTableContext) {\n  let router = useRouter();\n  const columns = ref([]);\n  const dictOptionInfo = ref({});\n  const selectedKeys = ref([]);\n  const rowSelection = ref(null);\n  let enableScrollBar = ref(true);\n  let tableScroll = computed(() => {\n    if (enableScrollBar.value == true) {\n      return void 0;\n    } else {\n      return { x: false };\n    }\n  });\n  function handleColumnResult(result) {\n    dictOptionInfo.value = result.dictOptions;\n    if (result.checkboxFlag == \"Y\") {\n      rowSelection.value = {\n        selectedRowKeys: selectedKeys,\n        onChange: onSelectChange\n      };\n    } else {\n      rowSelection.value = null;\n    }\n    enableScrollBar.value = result.scrollFlag == 1;\n    let dataColumns = result.columns;\n    dataColumns.forEach((column) => {\n      Object.keys(column).map((key) => {\n        if (column[key] == null) {\n          delete column[key];\n        }\n      });\n    });\n    let fieldHrefSlots = result.fieldHrefSlots;\n    const fieldHrefSlotKeysMap = {};\n    fieldHrefSlots.forEach((item) => fieldHrefSlotKeysMap[item.slotName] = item);\n    let tableColumns = [];\n    tableColumns = handleColumnHrefAndDict(dataColumns, fieldHrefSlotKeysMap);\n    bpmStatusFilter(tableColumns);\n    console.log(\"-----\\u5217\\u8868\\u5217\\u914D\\u7F6E----\", tableColumns);\n    if (onlineTableContext.isTree() === true) {\n      let firstField = result.textField;\n      let index = -1;\n      for (let i = 0; i < tableColumns.length; i++) {\n        if (tableColumns[i].dataIndex == firstField) {\n          index = i;\n          break;\n        }\n      }\n      if (index > 0) {\n        let deleteColumns = tableColumns.splice(index, 1);\n        tableColumns.unshift(deleteColumns[0]);\n      }\n      if (tableColumns.length > 0) {\n        tableColumns[0].align = \"left\";\n      }\n    }\n    columns.value = tableColumns;\n  }\n  function onSelectChange(selectedRowKeys, selectedRows) {\n    selectedKeys.value = selectedRowKeys;\n    onlineTableContext[\"selectedRows\"] = toRaw(selectedRows);\n    onlineTableContext[\"selectedRowKeys\"] = toRaw(selectedRowKeys);\n  }\n  function handleColumnHrefAndDict(columns2, fieldHrefSlotKeysMap) {\n    for (let column of columns2) {\n      let { customRender, hrefSlotName, fieldType } = column;\n      if (fieldType == \"Date\") {\n        column.customRender = ({ text: text2 }) => {\n          if (!text2) {\n            return \"\";\n          }\n          if (text2.length > 10) {\n            return text2.substring(0, 10);\n          }\n          return text2;\n        };\n      } else {\n        if (!hrefSlotName && (column.scopedSlots && column.scopedSlots.customRender)) {\n          if (fieldHrefSlotKeysMap.hasOwnProperty(column.scopedSlots.customRender)) {\n            hrefSlotName = column.scopedSlots.customRender;\n          }\n        }\n        if (customRender || hrefSlotName) {\n          let dictCode = customRender;\n          let replaceFlag = \"_replace_text_\";\n          column.ellipsis = true;\n          column.customRender = ({ text: text2, record: record2 }) => {\n            let value = text2;\n            if (dictCode) {\n              if (dictCode.startsWith(replaceFlag)) {\n                let textFieldName = dictCode.replace(replaceFlag, \"\");\n                value = record2[textFieldName];\n              } else {\n                value = filterMultiDictText(unref(dictOptionInfo)[dictCode], text2 + \"\");\n              }\n            }\n            if (column.showLength) {\n              if (value && value.length > column.showLength) {\n                value = value.substr(0, column.showLength) + \"...\";\n              }\n            }\n            if (hrefSlotName) {\n              let field2 = fieldHrefSlotKeysMap[hrefSlotName];\n              if (field2) {\n                return h(\"a\", {\n                  onClick: () => handleClickFieldHref(field2, record2)\n                }, value);\n              }\n            }\n            return value;\n          };\n        }\n        if (column.scopedSlots) {\n          column.ellipsis = true;\n          let slots = column.scopedSlots;\n          column[\"slots\"] = slots;\n          delete column.scopedSlots;\n        }\n      }\n    }\n    return columns2;\n  }\n  function handleClickFieldHref(field, record) {\n    let href = field.href;\n    let urlPattern = /(ht|f)tp(s?)\\:\\/\\/[0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*(:(0-9)*)*(\\/?)([a-zA-Z0-9\\-\\.\\?\\,\\'\\/\\\\\\+&amp;%\\$#_]*)?/;\n    let compPattern = /\\.vue(\\?.*)?$/;\n    let jsPattern = /{{([^}]+)}}/g;\n    if (typeof href === \"string\") {\n      href = href.trim().replace(/\\${([^}]+)?}/g, (_s1, s2) => record[s2]);\n      if (jsPattern.test(href)) {\n        href = href.replace(jsPattern, function(text, s0) {\n          try {\n            return eval(s0);\n          } catch (e) {\n            console.error(e);\n            return text;\n          }\n        });\n      }\n      if (urlPattern.test(href)) {\n        window.open(href, \"_blank\");\n      } else if (compPattern.test(href)) {\n        openHrefCompModal(href);\n      } else {\n        router.push(href);\n      }\n    }\n  }\n  const dialogStyle = {\n    top: 0,\n    left: 0,\n    height: \"100%\",\n    margin: 0,\n    padding: 0\n  };\n  const hrefComponent = reactive({\n    model: {\n      title: \"\",\n      okText: \"\\u5173\\u95ED\",\n      width: \"100%\",\n      visible: false,\n      destroyOnClose: true,\n      style: dialogStyle,\n      bodyStyle: { padding: \"8px\", height: \"calc(100vh - 108px)\", overflow: \"auto\", overflowX: \"hidden\" },\n      cancelButtonProps: { style: { display: \"none\" } }\n    },\n    on: {\n      ok: () => hrefComponent.model.visible = false,\n      cancel: () => hrefComponent.model.visible = false\n    },\n    is: null,\n    params: {}\n  });\n  function openHrefCompModal(href2) {\n    let index = href2.indexOf(\"?\");\n    let path = href2;\n    if (index !== -1) {\n      path = href2.substring(0, index);\n      let paramString = href2.substring(index + 1, href2.length);\n      let paramArray = paramString.split(\"&\");\n      let params = {};\n      paramArray.forEach((paramObject) => {\n        let paramItem = paramObject.split(\"=\");\n        params[paramItem[0]] = paramItem[1];\n      });\n      hrefComponent.params = params;\n    } else {\n      hrefComponent.params = {};\n    }\n    hrefComponent.model.visible = true;\n    hrefComponent.model.title = \"\\u64CD\\u4F5C\";\n    hrefComponent.is = defineAsyncComponent(() => import(\n      /* @vite-ignore */\n      \"/@/views/\" + (path.startsWith(\"/\") ? path.slice(1) : path)\n    ));\n  }\n  const actionColumn = reactive({\n    title: \"\\u64CD\\u4F5C\",\n    dataIndex: \"action\",\n    slots: { customRender: \"action\" },\n    align: \"center\",\n    width: 150\n  });\n  function bpmStatusFilter(tableColumns) {\n    let flag = false;\n    for (let i = 0; i < tableColumns.length; i++) {\n      let item = tableColumns[i];\n      let fieldName = item.dataIndex;\n      if (fieldName.toLowerCase() == \"bpm_status\") {\n        flag = true;\n        break;\n      }\n    }\n    onlineTableContext[\"hasBpmStatus\"] = flag;\n    return flag;\n  }\n  function downloadRowFile(text2) {\n    if (!text2) {\n      return;\n    }\n    if (text2.indexOf(\",\") > 0) {\n      text2 = text2.substring(0, text2.indexOf(\",\"));\n    }\n    let url = getFileAccessHttpUrl(text2);\n    window.open(url);\n  }\n  function getImgView(text2) {\n    if (text2 && text2.indexOf(\",\") > 0) {\n      text2 = text2.substring(0, text2.indexOf(\",\"));\n    }\n    return getFileAccessHttpUrl(text2);\n  }\n  function getPcaText(code) {\n    if (!code) {\n      return \"\";\n    }\n    return getAreaTextByCode(code);\n  }\n  function getFormatDate(text2) {\n    if (!text2) {\n      return \"\";\n    }\n    let a = text2;\n    if (a.length > 10) {\n      a = a.substring(0, 10);\n    }\n    return a;\n  }\n  watch(selectedKeys, () => {\n    onlineTableContext[\"selectedRowKeys\"] = toRaw(selectedKeys.value);\n  });\n  onlineTableContext[\"clearSelectedRow\"] = () => {\n    selectedKeys.value = [];\n    onlineTableContext[\"selectedRows\"] = [];\n    onlineTableContext[\"selectedRowKeys\"] = [];\n  };\n  function viewOnlineCellImage(text2) {\n    if (text2) {\n      let imgList = [];\n      let arr = text2.split(\",\");\n      for (let str of arr) {\n        if (str) {\n          imgList.push(getFileAccessHttpUrl(str));\n        }\n      }\n      createImgPreview({ imageList: imgList });\n    }\n  }\n  return {\n    columns,\n    actionColumn,\n    selectedKeys,\n    rowSelection,\n    enableScrollBar,\n    tableScroll,\n    downloadRowFile,\n    getImgView,\n    getPcaText,\n    getFormatDate,\n    handleColumnResult,\n    onSelectChange,\n    hrefComponent,\n    viewOnlineCellImage\n  };\n}\nexport { useListButton as a, useTableColumns as b, useOnlineTableContext as u };\n"],
  "mappings": "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",
  "names": ["REGION_DATA", "text", "default"]
}
