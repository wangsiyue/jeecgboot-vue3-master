{
  "version": 3,
  "sources": ["../../@jeecg/online/toString.js"],
  "sourcesContent": ["import { i as isObjectLike, b as baseGetTag, S as Symbol$1, a as isArray } from \"./isArray.js\";\nvar symbolTag = \"[object Symbol]\";\nfunction isSymbol(value) {\n  return typeof value == \"symbol\" || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\nfunction arrayMap(array, iteratee) {\n  var index = -1, length = array == null ? 0 : array.length, result = Array(length);\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\nvar INFINITY = 1 / 0;\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : void 0, symbolToString = symbolProto ? symbolProto.toString : void 0;\nfunction baseToString(value) {\n  if (typeof value == \"string\") {\n    return value;\n  }\n  if (isArray(value)) {\n    return arrayMap(value, baseToString) + \"\";\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : \"\";\n  }\n  var result = value + \"\";\n  return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n}\nfunction toString(value) {\n  return value == null ? \"\" : baseToString(value);\n}\nexport { isSymbol as i, toString as t };\n"],
  "mappings": ";;;;;;;;;;;AAAA;AACA,IAAI,YAAY;AAChB,SAAS,SAAS,OAAO;AACvB,SAAO,OAAO,SAAS,YAAY,aAAa,KAAK,KAAK,WAAW,KAAK,KAAK;AACjF;AACA,SAAS,SAAS,OAAO,UAAU;AACjC,MAAI,QAAQ,IAAI,SAAS,SAAS,OAAO,IAAI,MAAM,QAAQ,SAAS,MAAM,MAAM;AAChF,SAAO,EAAE,QAAQ,QAAQ;AACvB,WAAO,SAAS,SAAS,MAAM,QAAQ,OAAO,KAAK;AAAA,EACrD;AACA,SAAO;AACT;AACA,IAAI,WAAW,IAAI;AACnB,IAAI,cAAc,WAAW,SAAS,YAAY;AAAlD,IAA0D,iBAAiB,cAAc,YAAY,WAAW;AAChH,SAAS,aAAa,OAAO;AAC3B,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO;AAAA,EACT;AACA,MAAI,UAAQ,KAAK,GAAG;AAClB,WAAO,SAAS,OAAO,YAAY,IAAI;AAAA,EACzC;AACA,MAAI,SAAS,KAAK,GAAG;AACnB,WAAO,iBAAiB,eAAe,KAAK,KAAK,IAAI;AAAA,EACvD;AACA,MAAI,SAAS,QAAQ;AACrB,SAAO,UAAU,OAAO,IAAI,SAAS,CAAC,WAAW,OAAO;AAC1D;AACA,SAAS,SAAS,OAAO;AACvB,SAAO,SAAS,OAAO,KAAK,aAAa,KAAK;AAChD;",
  "names": []
}
