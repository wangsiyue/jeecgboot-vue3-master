{
  "version": 3,
  "sources": ["../../../src/components/Modal/src/hooks/useModal.ts", "../../../src/components/Modal/index.ts", "../../../src/components/Modal/src/hooks/useModalContext.ts", "../../../src/components/Modal/src/typing.ts"],
  "sourcesContent": ["import type { UseModalReturnType, ModalMethods, ModalProps, ReturnMethods, UseModalInnerReturnType } from '../typing';\nimport { ref, onUnmounted, unref, getCurrentInstance, reactive, watchEffect, nextTick, toRaw } from 'vue';\nimport { isProdMode } from '/@/utils/env';\nimport { isFunction } from '/@/utils/is';\nimport { isEqual } from 'lodash-es';\nimport { tryOnUnmounted } from '@vueuse/core';\nimport { error } from '/@/utils/log';\nimport { computed } from 'vue';\n\nconst dataTransfer = reactive<any>({});\n\nconst visibleData = reactive<{ [key: number]: boolean }>({});\n\n/**\n * @description: Applicable to independent modal and call outside\n */\nexport function useModal(): UseModalReturnType {\n  const modal = ref<Nullable<ModalMethods>>(null);\n  const loaded = ref<Nullable<boolean>>(false);\n  const uid = ref<string>('');\n\n  function register(modalMethod: ModalMethods, uuid: string) {\n    if (!getCurrentInstance()) {\n      throw new Error('useModal() can only be used inside setup() or functional components!');\n    }\n    uid.value = uuid;\n    isProdMode() &&\n      onUnmounted(() => {\n        modal.value = null;\n        loaded.value = false;\n        dataTransfer[unref(uid)] = null;\n      });\n    if (unref(loaded) && isProdMode() && modalMethod === unref(modal)) return;\n\n    modal.value = modalMethod;\n    loaded.value = true;\n    modalMethod.emitVisible = (visible: boolean, uid: number) => {\n      visibleData[uid] = visible;\n    };\n  }\n\n  const getInstance = () => {\n    const instance = unref(modal);\n    if (!instance) {\n      error('useModal instance is undefined!');\n    }\n    return instance;\n  };\n\n  const methods: ReturnMethods = {\n    setModalProps: (props: Partial<ModalProps>): void => {\n      getInstance()?.setModalProps(props);\n    },\n\n    getVisible: computed((): boolean => {\n      return visibleData[~~unref(uid)];\n    }),\n\n    redoModalHeight: () => {\n      getInstance()?.redoModalHeight?.();\n    },\n\n    openModal: <T = any>(visible = true, data?: T, openOnSet = true): void => {\n      getInstance()?.setModalProps({\n        visible: visible,\n      });\n\n      if (!data) return;\n      const id = unref(uid);\n      if (openOnSet) {\n        dataTransfer[id] = null;\n        dataTransfer[id] = toRaw(data);\n        return;\n      }\n      const equal = isEqual(toRaw(dataTransfer[id]), toRaw(data));\n      if (!equal) {\n        dataTransfer[id] = toRaw(data);\n      }\n    },\n\n    closeModal: () => {\n      getInstance()?.setModalProps({ visible: false });\n    },\n  };\n  return [register, methods];\n}\n\nexport const useModalInner = (callbackFn?: Fn): UseModalInnerReturnType => {\n  const modalInstanceRef = ref<Nullable<ModalMethods>>(null);\n  const currentInstance = getCurrentInstance();\n  const uidRef = ref<string>('');\n\n  const getInstance = () => {\n    const instance = unref(modalInstanceRef);\n    if (!instance) {\n      error('useModalInner instance is undefined!');\n    }\n    return instance;\n  };\n\n  const register = (modalInstance: ModalMethods, uuid: string) => {\n    isProdMode() &&\n      tryOnUnmounted(() => {\n        modalInstanceRef.value = null;\n      });\n    uidRef.value = uuid;\n    modalInstanceRef.value = modalInstance;\n    currentInstance?.emit('register', modalInstance, uuid);\n  };\n\n  watchEffect(() => {\n    const data = dataTransfer[unref(uidRef)];\n    if (!data) return;\n    if (!callbackFn || !isFunction(callbackFn)) return;\n    nextTick(() => {\n      callbackFn(data);\n    });\n  });\n\n  return [\n    register,\n    {\n      changeLoading: (loading = true) => {\n        getInstance()?.setModalProps({ loading });\n      },\n      getVisible: computed((): boolean => {\n        return visibleData[~~unref(uidRef)];\n      }),\n\n      changeOkLoading: (loading = true) => {\n        getInstance()?.setModalProps({ confirmLoading: loading });\n      },\n\n      closeModal: () => {\n        getInstance()?.setModalProps({ visible: false });\n      },\n\n      setModalProps: (props: Partial<ModalProps>) => {\n        getInstance()?.setModalProps(props);\n      },\n\n      redoModalHeight: () => {\n        const callRedo = getInstance()?.redoModalHeight;\n        callRedo && callRedo();\n      },\n    },\n  ];\n};\n", "import { withInstall } from '/@/utils';\nimport './src/index.less';\nimport basicModal from './src/BasicModal.vue';\n\nexport const BasicModal = withInstall(basicModal);\nexport { useModalContext } from './src/hooks/useModalContext';\nexport { useModal, useModalInner } from './src/hooks/useModal';\nexport * from './src/typing';\n", "import { InjectionKey } from 'vue';\nimport { createContext, useContext } from '/@/hooks/core/useContext';\n\nexport interface ModalContextProps {\n  redoModalHeight: () => void;\n}\n\nconst key: InjectionKey<ModalContextProps> = Symbol();\n\nexport function createModalContext(context: ModalContextProps) {\n  return createContext<ModalContextProps>(context, key);\n}\n\nexport function useModalContext() {\n  return useContext<ModalContextProps>(key);\n}\n", "import type { ButtonProps } from 'ant-design-vue/lib/button/buttonTypes';\nimport type { CSSProperties, VNodeChild, ComputedRef } from 'vue';\n/**\n * @description: \u5F39\u7A97\u5BF9\u5916\u66B4\u9732\u7684\u65B9\u6CD5\n */\nexport interface ModalMethods {\n  setModalProps: (props: Partial<ModalProps>) => void;\n  emitVisible?: (visible: boolean, uid: number) => void;\n  redoModalHeight?: () => void;\n}\n\nexport type RegisterFn = (modalMethods: ModalMethods, uuid?: string) => void;\n\nexport interface ReturnMethods extends ModalMethods {\n  openModal: <T = any>(props?: boolean, data?: T, openOnSet?: boolean) => void;\n  closeModal: () => void;\n  getVisible?: ComputedRef<boolean>;\n}\n\nexport type UseModalReturnType = [RegisterFn, ReturnMethods];\n\nexport interface ReturnInnerMethods extends ModalMethods {\n  closeModal: () => void;\n  changeLoading: (loading: boolean) => void;\n  changeOkLoading: (loading: boolean) => void;\n  getVisible?: ComputedRef<boolean>;\n  redoModalHeight: () => void;\n}\n\nexport type UseModalInnerReturnType = [RegisterFn, ReturnInnerMethods];\n\nexport interface ModalProps {\n  minHeight?: number;\n  height?: number;\n  // \u542F\u7528wrapper\u540E \u5E95\u90E8\u53EF\u4EE5\u9002\u5F53\u589E\u52A0\u9AD8\u5EA6\n  wrapperFooterOffset?: number;\n  draggable?: boolean;\n  scrollTop?: boolean;\n\n  // \u662F\u5426\u53EF\u4EE5\u8FDB\u884C\u5168\u5C4F\n  canFullscreen?: boolean;\n  defaultFullscreen?: boolean;\n  visible?: boolean;\n  // \u6E29\u99A8\u63D0\u9192\u4FE1\u606F\n  helpMessage: string | string[];\n\n  // \u662F\u5426\u4F7F\u7528modalWrapper\n  useWrapper: boolean;\n\n  loading: boolean;\n  loadingTip?: string;\n\n  wrapperProps: Omit<ModalWrapperProps, 'loading'>;\n\n  showOkBtn: boolean;\n  showCancelBtn: boolean;\n  closeFunc: () => Promise<any>;\n\n  /**\n   * Specify a function that will be called when modal is closed completely.\n   * @type Function\n   */\n  afterClose?: () => any;\n\n  /**\n   * Body style for modal body element. Such as height, padding etc.\n   * @default {}\n   * @type object\n   */\n  bodyStyle?: CSSProperties;\n\n  /**\n   * Text of the Cancel button\n   * @default 'cancel'\n   * @type string\n   */\n  cancelText?: string;\n\n  /**\n   * Centered Modal\n   * @default false\n   * @type boolean\n   */\n  centered?: boolean;\n\n  /**\n   * Whether a close (x) button is visible on top right of the modal dialog or not\n   * @default true\n   * @type boolean\n   */\n  closable?: boolean;\n  /**\n   * Whether a close (x) button is visible on top right of the modal dialog or not\n   */\n  closeIcon?: VNodeChild | JSX.Element;\n\n  /**\n   * Whether to apply loading visual effect for OK button or not\n   * @default false\n   * @type boolean\n   */\n  confirmLoading?: boolean;\n\n  /**\n   * Whether to unmount child components on onClose\n   * @default false\n   * @type boolean\n   */\n  destroyOnClose?: boolean;\n\n  /**\n   * Footer content, set as :footer=\"null\" when you don't need default buttons\n   * @default OK and Cancel buttons\n   * @type any (string | slot)\n   */\n  footer?: VNodeChild | JSX.Element;\n\n  /**\n   * Return the mount node for Modal\n   * @default () => document.body\n   * @type Function\n   */\n  getContainer?: (instance: any) => HTMLElement;\n\n  /**\n   * Whether show mask or not.\n   * @default true\n   * @type boolean\n   */\n  mask?: boolean;\n\n  /**\n   * Whether to close the modal dialog when the mask (area outside the modal) is clicked\n   * @default true\n   * @type boolean\n   */\n  maskClosable?: boolean;\n\n  /**\n   * Style for modal's mask element.\n   * @default {}\n   * @type object\n   */\n  maskStyle?: CSSProperties;\n\n  /**\n   * Text of the OK button\n   * @default 'OK'\n   * @type string\n   */\n  okText?: string;\n\n  /**\n   * Button type of the OK button\n   * @default 'primary'\n   * @type string\n   */\n  okType?: 'primary' | 'danger' | 'dashed' | 'ghost' | 'default';\n\n  /**\n   * The ok button props, follow jsx rules\n   * @type object\n   */\n  okButtonProps?: ButtonProps;\n\n  /**\n   * The cancel button props, follow jsx rules\n   * @type object\n   */\n  cancelButtonProps?: ButtonProps;\n\n  /**\n   * The modal dialog's title\n   * @type any (string | slot)\n   */\n  title?: VNodeChild | JSX.Element;\n\n  /**\n   * Width of the modal dialog\n   * @default 520\n   * @type string | number\n   */\n  width?: string | number;\n\n  /**\n   * The class name of the container of the modal dialog\n   * @type string\n   */\n  wrapClassName?: string;\n\n  /**\n   * The z-index of the Modal\n   * @default 1000\n   * @type number\n   */\n  zIndex?: number;\n\n  enableComment?: boolean;\n}\n\nexport interface ModalWrapperProps {\n  footerOffset?: number;\n  loading: boolean;\n  modalHeaderHeight: number;\n  modalFooterHeight: number;\n  minHeight: number;\n  height: number;\n  visible: boolean;\n  fullScreen: boolean;\n  useWrapper: boolean;\n}\n"],
  "mappings": "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",
  "names": ["uid"]
}
