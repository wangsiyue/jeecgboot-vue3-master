{
  "version": 3,
  "sources": ["../../../src/views/system/user/user.api.ts"],
  "sourcesContent": ["import { defHttp } from '/@/utils/http/axios';\nimport { Modal } from 'ant-design-vue';\n\nenum Api {\n  list = '/sys/user/list',\n  save = '/sys/user/add',\n  edit = '/sys/user/edit',\n  agentSave = '/sys/sysUserAgent/add',\n  agentEdit = '/sys/sysUserAgent/edit',\n  getUserRole = '/sys/user/queryUserRole',\n  duplicateCheck = '/sys/duplicate/check',\n  deleteUser = '/sys/user/delete',\n  deleteBatch = '/sys/user/deleteBatch',\n  importExcel = '/sys/user/importExcel',\n  exportXls = '/sys/user/exportXls',\n  recycleBinList = '/sys/user/recycleBin',\n  putRecycleBin = '/sys/user/putRecycleBin',\n  deleteRecycleBin = '/sys/user/deleteRecycleBin',\n  allRolesList = '/sys/role/queryall',\n  allTenantList = '/sys/tenant/queryList',\n  allPostList = '/sys/position/list',\n  userDepartList = '/sys/user/userDepartList',\n  changePassword = '/sys/user/changePassword',\n  frozenBatch = '/sys/user/frozenBatch',\n  getUserAgent = '/sys/sysUserAgent/queryByUserName',\n  syncUser = '/act/process/extActProcess/doSyncUser',\n}\n/**\n * \u5BFC\u51FAapi\n * @param params\n */\nexport const getExportUrl = Api.exportXls;\n/**\n * \u5BFC\u5165api\n */\nexport const getImportUrl = Api.importExcel;\n/**\n * \u5217\u8868\u63A5\u53E3\n * @param params\n */\nexport const list = (params) => defHttp.get({ url: Api.list, params });\n\n/**\n * \u7528\u6237\u89D2\u8272\u63A5\u53E3\n * @param params\n */\nexport const getUserRoles = (params) => defHttp.get({ url: Api.getUserRole, params }, { errorMessageMode: 'none' });\n\n/**\n * \u5220\u9664\u7528\u6237\n */\nexport const deleteUser = (params, handleSuccess) => {\n  return defHttp.delete({ url: Api.deleteUser, params }, { joinParamsToUrl: true }).then(() => {\n    handleSuccess();\n  });\n};\n/**\n * \u6279\u91CF\u5220\u9664\u7528\u6237\n * @param params\n */\nexport const batchDeleteUser = (params, handleSuccess) => {\n  Modal.confirm({\n    title: '\u786E\u8BA4\u5220\u9664',\n    content: '\u662F\u5426\u5220\u9664\u9009\u4E2D\u6570\u636E',\n    okText: '\u786E\u8BA4',\n    cancelText: '\u53D6\u6D88',\n    onOk: () => {\n      return defHttp.delete({ url: Api.deleteBatch, data: params }, { joinParamsToUrl: true }).then(() => {\n        handleSuccess();\n      });\n    },\n  });\n};\n/**\n * \u4FDD\u5B58\u6216\u8005\u66F4\u65B0\u7528\u6237\n * @param params\n */\nexport const saveOrUpdateUser = (params, isUpdate) => {\n  let url = isUpdate ? Api.edit : Api.save;\n  return defHttp.post({ url: url, params });\n};\n/**\n * \u552F\u4E00\u6821\u9A8C\n * @param params\n */\nexport const duplicateCheck = (params) => defHttp.get({ url: Api.duplicateCheck, params }, { isTransformResponse: false });\n/**\n * \u83B7\u53D6\u5168\u90E8\u89D2\u8272\n * @param params\n */\nexport const getAllRolesList = (params) => defHttp.get({ url: Api.allRolesList, params });\n/**\n * \u83B7\u53D6\u5168\u90E8\u79DF\u6237\n */\nexport const getAllTenantList = (params) => defHttp.get({ url: Api.allTenantList, params });\n/**\n * \u83B7\u53D6\u6307\u5B9A\u7528\u6237\u8D1F\u8D23\u90E8\u95E8\n */\nexport const getUserDepartList = (params) => defHttp.get({ url: Api.userDepartList, params }, { successMessageMode: 'none' });\n/**\n * \u83B7\u53D6\u5168\u90E8\u804C\u52A1\n */\nexport const getAllPostList = (params) => {\n  return new Promise((resolve) => {\n    defHttp.get({ url: Api.allPostList, params }).then((res) => {\n      resolve(res.records);\n    });\n  });\n};\n/**\n * \u56DE\u6536\u7AD9\u5217\u8868\n * @param params\n */\nexport const getRecycleBinList = (params) => defHttp.get({ url: Api.recycleBinList, params });\n/**\n * \u56DE\u6536\u7AD9\u8FD8\u539F\n * @param params\n */\nexport const putRecycleBin = (params, handleSuccess) => {\n  return defHttp.put({ url: Api.putRecycleBin, params }).then(() => {\n    handleSuccess();\n  });\n};\n/**\n * \u56DE\u6536\u7AD9\u5220\u9664\n * @param params\n */\nexport const deleteRecycleBin = (params, handleSuccess) => {\n  return defHttp.delete({ url: Api.deleteRecycleBin, params }, { joinParamsToUrl: true }).then(() => {\n    handleSuccess();\n  });\n};\n/**\n * \u4FEE\u6539\u5BC6\u7801\n * @param params\n */\nexport const changePassword = (params) => {\n  return defHttp.put({ url: Api.changePassword, params });\n};\n/**\n * \u51BB\u7ED3\u89E3\u51BB\n * @param params\n */\nexport const frozenBatch = (params, handleSuccess) => {\n  return defHttp.put({ url: Api.frozenBatch, params }).then(() => {\n    handleSuccess();\n  });\n};\n/**\n * \u83B7\u53D6\u7528\u6237\u4EE3\u7406\n * @param params\n */\nexport const getUserAgent = (params) => defHttp.get({ url: Api.getUserAgent, params }, { isTransformResponse: false });\n/**\n * \u4FDD\u5B58\u6216\u8005\u66F4\u65B0\u7528\u6237\u4EE3\u7406\n * @param params\n */\nexport const saveOrUpdateAgent = (params) => {\n  let url = params.id ? Api.agentEdit : Api.agentSave;\n  return defHttp.post({ url: url, params });\n};\n\n/**\n * \u7528\u6237\u540C\u6B65\u6D41\u7A0B\n * @param params\n */\nexport const syncUser = () => defHttp.put({ url: Api.syncUser });\n"],
  "mappings": ";;;;;;;;AAAA;AAqFO,IAAM,iBAAiB,CAAC,WAAW,QAAQ,IAAI,EAAE,KAAK,6CAAoB,OAAO,GAAG,EAAE,qBAAqB,MAAM,CAAC;",
  "names": []
}
