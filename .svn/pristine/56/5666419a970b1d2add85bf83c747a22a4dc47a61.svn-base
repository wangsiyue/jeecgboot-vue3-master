{
  "version": 3,
  "sources": ["../../../src/components/Form/src/hooks/useForm.ts", "../../../src/components/Form/src/utils/formUtils.ts", "../../../src/components/Form/index.ts", "../../../src/components/Form/src/types/form.ts", "../../../src/components/Form/src/types/formItem.ts", "../../../src/components/Form/src/hooks/useComponentRegister.ts"],
  "sourcesContent": ["import type { FormProps, FormActionType, UseFormReturnType, FormSchema } from '../types/form';\nimport type { NamePath } from 'ant-design-vue/lib/form/interface';\nimport type { DynamicProps } from '/#/utils';\nimport { handleRangeValue } from '../utils/formUtils';\nimport { ref, onUnmounted, unref, nextTick, watch } from 'vue';\nimport { isProdMode } from '/@/utils/env';\nimport { error } from '/@/utils/log';\nimport { getDynamicProps, getValueType } from '/@/utils';\n\nexport declare type ValidateFields = (nameList?: NamePath[]) => Promise<Recordable>;\n\ntype Props = Partial<DynamicProps<FormProps>>;\n\nexport function useForm(props?: Props): UseFormReturnType {\n  const formRef = ref<Nullable<FormActionType>>(null);\n  const loadedRef = ref<Nullable<boolean>>(false);\n\n  async function getForm() {\n    const form = unref(formRef);\n    if (!form) {\n      error('The form instance has not been obtained, please make sure that the form has been rendered when performing the form operation!');\n    }\n    await nextTick();\n    return form as FormActionType;\n  }\n\n  function register(instance: FormActionType) {\n    isProdMode() &&\n      onUnmounted(() => {\n        formRef.value = null;\n        loadedRef.value = null;\n      });\n    if (unref(loadedRef) && isProdMode() && instance === unref(formRef)) return;\n\n    formRef.value = instance;\n    loadedRef.value = true;\n\n    watch(\n      () => props,\n      () => {\n        props && instance.setProps(getDynamicProps(props));\n      },\n      {\n        immediate: true,\n        deep: true,\n      }\n    );\n  }\n\n  const methods: FormActionType = {\n    scrollToField: async (name: NamePath, options?: ScrollOptions | undefined) => {\n      const form = await getForm();\n      form.scrollToField(name, options);\n    },\n    setProps: async (formProps: Partial<FormProps>) => {\n      const form = await getForm();\n      form.setProps(formProps);\n    },\n\n    updateSchema: async (data: Partial<FormSchema> | Partial<FormSchema>[]) => {\n      const form = await getForm();\n      form.updateSchema(data);\n    },\n\n    resetSchema: async (data: Partial<FormSchema> | Partial<FormSchema>[]) => {\n      const form = await getForm();\n      form.resetSchema(data);\n    },\n\n    clearValidate: async (name?: string | string[]) => {\n      const form = await getForm();\n      form.clearValidate(name);\n    },\n\n    resetFields: async () => {\n      getForm().then(async (form) => {\n        await form.resetFields();\n      });\n    },\n\n    removeSchemaByFiled: async (field: string | string[]) => {\n      unref(formRef)?.removeSchemaByFiled(field);\n    },\n\n    // TODO promisify\n    getFieldsValue: <T>() => {\n      //update-begin-author:taoyan date:2022-7-5 for: VUEN-1341\u3010\u6D41\u7A0B\u3011\u7F16\u7801\u65B9\u5F0F \u6D41\u7A0B\u8282\u70B9\u7F16\u8F91\u8868\u5355\u65F6\uFF0C\u586B\u5199\u6570\u636E\u62A5\u9519 \u5305\u62EC\u7528\u6237\u7EC4\u4EF6\u3001\u90E8\u95E8\u7EC4\u4EF6\u3001\u7701\u5E02\u533A\n      let values = unref(formRef)?.getFieldsValue() as T;\n      if(values){\n        Object.keys(values).map(key=>{\n          if (values[key] instanceof Array) {\n            values[key] = values[key].join(',');\n          }\n        });\n      }\n      return values;\n      //update-end-author:taoyan date:2022-7-5 for: VUEN-1341\u3010\u6D41\u7A0B\u3011\u7F16\u7801\u65B9\u5F0F \u6D41\u7A0B\u8282\u70B9\u7F16\u8F91\u8868\u5355\u65F6\uFF0C\u586B\u5199\u6570\u636E\u62A5\u9519 \u5305\u62EC\u7528\u6237\u7EC4\u4EF6\u3001\u90E8\u95E8\u7EC4\u4EF6\u3001\u7701\u5E02\u533A\n    },\n\n    setFieldsValue: async <T>(values: T) => {\n      const form = await getForm();\n      form.setFieldsValue<T>(values);\n    },\n\n    appendSchemaByField: async (schema: FormSchema, prefixField: string | undefined, first: boolean) => {\n      const form = await getForm();\n      form.appendSchemaByField(schema, prefixField, first);\n    },\n\n    submit: async (): Promise<any> => {\n      const form = await getForm();\n      return form.submit();\n    },\n\n    /**\n     * \u8868\u5355\u9A8C\u8BC1\u5E76\u8FD4\u56DE\u8868\u5355\u503C\n     * @update:\u6DFB\u52A0\u8868\u5355\u503C\u8F6C\u6362\u903B\u8F91\n     * @updateBy:zyf\n     * @updateDate:2021-09-02\n     */\n    validate: async (nameList?: NamePath[]): Promise<Recordable> => {\n      const form = await getForm();\n      let getProps = props || form.getProps;\n      let values = form.validate(nameList).then((values) => {\n        for (let key in values) {\n          if (values[key] instanceof Array) {\n            let valueType = getValueType(getProps, key);\n            if (valueType === 'string') {\n              values[key] = values[key].join(',');\n            }\n          }\n        }\n        //--@updateBy-begin----author:liusq---date:20210916------for:\u5904\u7406\u533A\u57DF\u4E8B\u4EF6\u5B57\u5178\u4FE1\u606F------\n        return handleRangeValue(getProps, values);\n        //--@updateBy-end----author:liusq---date:20210916------for:\u5904\u7406\u533A\u57DF\u4E8B\u4EF6\u5B57\u5178\u4FE1\u606F------\n      });\n      return values;\n    },\n    validateFields: async (nameList?: NamePath[]): Promise<Recordable> => {\n      const form = await getForm();\n      return form.validateFields(nameList);\n    },\n  };\n\n  return [register, methods];\n}\n", "import { unref } from 'vue';\nimport { dateUtil } from '/@/utils/dateUtil';\n\n/**\n * \u8868\u5355\u533A\u95F4\u65F6\u95F4\u6570\u503C\u5B57\u6BB5\u8F6C\u6362\n * @param props\n * @param values\n */\nexport function handleRangeValue(props, values) {\n  //\u5224\u65AD\u662F\u5426\u914D\u7F6E\u5E76\u5904\u7406fieldMapToTime\n  const fieldMapToTime = unref(props)?.fieldMapToTime;\n  fieldMapToTime && (values = handleRangeTimeValue(props, values));\n  //\u5224\u65AD\u662F\u5426\u914D\u7F6E\u5E76\u5904\u7406fieldMapToNumber\n  const fieldMapToNumber = unref(props)?.fieldMapToNumber;\n  fieldMapToNumber && (values = handleRangeNumberValue(props, values));\n  return values;\n}\n/**\n * \u5904\u7406\u65F6\u95F4\u8F6C\u6362\u62102\u4E2A\u5B57\u6BB5\n * @param props\n * @param values\n */\nexport function handleRangeTimeValue(props, values) {\n  const fieldMapToTime = unref(props).fieldMapToTime;\n  if (!fieldMapToTime || !Array.isArray(fieldMapToTime)) {\n    return values;\n  }\n  for (const [field, [startTimeKey, endTimeKey], format = 'YYYY-MM-DD'] of fieldMapToTime) {\n    if (!field || !startTimeKey || !endTimeKey || !values[field]) {\n      continue;\n    }\n\n    // \u3010issues/I53G9Y\u3011 \u65E5\u671F\u533A\u95F4\u7EC4\u4EF6\u6709\u53EF\u80FD\u662F\u5B57\u7B26\u4E32\n    let timeValue = values[field];\n    if (!Array.isArray(timeValue)) {\n      timeValue = timeValue.split(',');\n    }\n    const [startTime, endTime]: string[] = timeValue;\n    values[startTimeKey] = dateUtil(startTime).format(format);\n    values[endTimeKey] = dateUtil(endTime).format(format);\n    Reflect.deleteProperty(values, field);\n  }\n  return values;\n}\n/**\n * \u5904\u7406\u6570\u5B57\u8F6C\u6362\u62102\u4E2A\u5B57\u6BB5\n * @param props\n * @param values\n * @updateby liusq\n * @updateDate:2021-09-16\n */\nexport function handleRangeNumberValue(props, values) {\n  const fieldMapToNumber = unref(props).fieldMapToNumber;\n  if (!fieldMapToNumber || !Array.isArray(fieldMapToNumber)) {\n    return values;\n  }\n  for (const [field, [startNumberKey, endNumberKey]] of fieldMapToNumber) {\n    if (!field || !startNumberKey || !endNumberKey || !values[field]) {\n      continue;\n    }\n    //update-begin-author:taoyan date:2022-5-10 for: \u7528\u4E8E\u6570\u503C\u7684\u8303\u56F4\u67E5\u8BE2 \u6570\u7EC4\u683C\u5F0F\u7684\u4E2D\u95F4\u8F6C\u6362\u4E0D\u77E5\u9053\u54EA\u91CC\u51FA\u4E86\u95EE\u9898\uFF0C\u8FD9\u91CC\u4F1A\u53D8\u6210\u5B57\u7B26\u4E32\uFF0C\u9700\u8981\u518D\u5F3A\u5236\u8F6C\u6210\u6570\u7EC4\n    let temp = values[field];\n    if (typeof temp === 'string') {\n      temp = temp.split(',');\n    }\n    const [startNumber, endNumber]: number[] = temp;\n    //update-end-author:taoyan date:2022-5-10 for: \u7528\u4E8E\u6570\u503C\u7684\u8303\u56F4\u67E5\u8BE2 \u6570\u7EC4\u683C\u5F0F\u7684\u4E2D\u95F4\u8F6C\u6362\u4E0D\u77E5\u9053\u54EA\u91CC\u51FA\u4E86\u95EE\u9898\uFF0C\u8FD9\u91CC\u4F1A\u53D8\u6210\u5B57\u7B26\u4E32\uFF0C\u9700\u8981\u518D\u5F3A\u5236\u8F6C\u6210\u6570\u7EC4\n    values[startNumberKey] = startNumber;\n    values[endNumberKey] = endNumber;\n    Reflect.deleteProperty(values, field);\n  }\n  return values;\n}\n", "import BasicForm from './src/BasicForm.vue';\n\nexport * from './src/types/form';\nexport * from './src/types/formItem';\n\nexport { useComponentRegister } from './src/hooks/useComponentRegister';\nexport { useForm } from './src/hooks/useForm';\n\nexport { default as ApiSelect } from './src/components/ApiSelect.vue';\nexport { default as RadioButtonGroup } from './src/components/RadioButtonGroup.vue';\nexport { default as ApiTreeSelect } from './src/components/ApiTreeSelect.vue';\nexport { default as ApiRadioGroup } from './src/components/ApiRadioGroup.vue';\n//Jeecg\u81EA\u5B9A\u4E49\u7EC4\u4EF6\nexport { default as JAreaLinkage } from './src/jeecg/components/JAreaLinkage.vue';\nexport { default as JSelectUser } from './src/jeecg/components/JSelectUser.vue';\nexport { default as JSelectDept } from './src/jeecg/components/JSelectDept.vue';\nexport { default as JCodeEditor } from './src/jeecg/components/JCodeEditor.vue';\nexport { default as JCategorySelect } from './src/jeecg/components/JCategorySelect.vue';\nexport { default as JSelectMultiple } from './src/jeecg/components/JSelectMultiple.vue';\nexport { default as JPopup } from './src/jeecg/components/JPopup.vue';\nexport { default as JAreaSelect } from './src/jeecg/components/JAreaSelect.vue';\nexport { JEasyCron, JEasyCronInner, JEasyCronModal } from '/@/components/Form/src/jeecg/components/JEasyCron';\nexport { default as JCheckbox } from './src/jeecg/components/JCheckbox.vue';\nexport { default as JInput } from './src/jeecg/components/JInput.vue';\nexport { default as JEllipsis } from './src/jeecg/components/JEllipsis.vue';\nexport { default as JDictSelectTag } from './src/jeecg/components/JDictSelectTag.vue';\nexport { default as JTreeSelect } from './src/jeecg/components/JTreeSelect.vue';\nexport { default as JSearchSelect } from './src/jeecg/components/JSearchSelect.vue';\nexport { default as JSelectUserByDept } from './src/jeecg/components/JSelectUserByDept.vue';\nexport { default as JEditor } from './src/jeecg/components/JEditor.vue';\nexport { default as JImageUpload } from './src/jeecg/components/JImageUpload.vue';\n// Jeecg\u81EA\u5B9A\u4E49\u6821\u9A8C\nexport { JCronValidator } from '/@/components/Form/src/jeecg/components/JEasyCron';\n\nexport { BasicForm };\n", "import type { NamePath, RuleObject } from 'ant-design-vue/lib/form/interface';\nimport type { VNode, ComputedRef } from 'vue';\nimport type { ButtonProps as AntdButtonProps } from '/@/components/Button';\nimport type { FormItem } from './formItem';\nimport type { ColEx, ComponentType } from './index';\nimport type { TableActionType } from '/@/components/Table/src/types/table';\nimport type { CSSProperties } from 'vue';\nimport type { RowProps } from 'ant-design-vue/lib/grid/Row';\n\nexport type FieldMapToTime = [string, [string, string], string?][];\nexport type FieldMapToNumber = [string, [string, string]][];\n\nexport type Rule = RuleObject & {\n  trigger?: 'blur' | 'change' | ['change', 'blur'];\n};\n\nexport interface RenderCallbackParams {\n  schema: FormSchema;\n  values: Recordable;\n  model: Recordable;\n  field: string;\n}\n\nexport interface ButtonProps extends AntdButtonProps {\n  text?: string;\n}\n\nexport interface FormActionType {\n  submit: () => Promise<void>;\n  setFieldsValue: <T>(values: T) => Promise<void>;\n  resetFields: () => Promise<void>;\n  getFieldsValue: () => Recordable;\n  clearValidate: (name?: string | string[]) => Promise<void>;\n  updateSchema: (data: Partial<FormSchema> | Partial<FormSchema>[]) => Promise<void>;\n  resetSchema: (data: Partial<FormSchema> | Partial<FormSchema>[]) => Promise<void>;\n  setProps: (formProps: Partial<FormProps>) => Promise<void>;\n  getProps: ComputedRef<Partial<FormProps>>;\n  removeSchemaByFiled: (field: string | string[]) => Promise<void>;\n  appendSchemaByField: (schema: FormSchema, prefixField: string | undefined, first?: boolean | undefined) => Promise<void>;\n  validateFields: (nameList?: NamePath[]) => Promise<any>;\n  validate: (nameList?: NamePath[]) => Promise<any>;\n  scrollToField: (name: NamePath, options?: ScrollOptions) => Promise<void>;\n}\n\nexport type RegisterFn = (formInstance: FormActionType) => void;\n\nexport type UseFormReturnType = [RegisterFn, FormActionType];\n\nexport interface FormProps {\n  layout?: 'vertical' | 'inline' | 'horizontal';\n  // Form value\n  model?: Recordable;\n  // The width of all items in the entire form\n  labelWidth?: number | string;\n  //alignment\n  labelAlign?: 'left' | 'right';\n  //Row configuration for the entire form\n  rowProps?: RowProps;\n  // Submit form on reset\n  submitOnReset?: boolean;\n  // Col configuration for the entire form\n  labelCol?: Partial<ColEx>;\n  // Col configuration for the entire form\n  wrapperCol?: Partial<ColEx>;\n\n  // General row style\n  baseRowStyle?: CSSProperties;\n\n  // General col configuration\n  baseColProps?: Partial<ColEx>;\n\n  // Form configuration rules\n  schemas?: FormSchema[];\n  // Function values used to merge into dynamic control form items\n  mergeDynamicData?: Recordable;\n  // Compact mode for search forms\n  compact?: boolean;\n  // Blank line span\n  emptySpan?: number | Partial<ColEx>;\n  // Internal component size of the form\n  size?: 'default' | 'small' | 'large';\n  // Whether to disable\n  disabled?: boolean;\n  // Time interval fields are mapped into multiple\n  fieldMapToTime?: FieldMapToTime;\n  // number interval fields are mapped into multiple\n  fieldMapToNumber?: FieldMapToNumber;\n  // Placeholder is set automatically\n  autoSetPlaceHolder?: boolean;\n  // Auto submit on press enter on input\n  autoSubmitOnEnter?: boolean;\n  // Check whether the information is added to the label\n  rulesMessageJoinLabel?: boolean;\n  // \u662F\u5426\u663E\u793A\u5C55\u5F00\u6536\u8D77\u6309\u94AE\n  showAdvancedButton?: boolean;\n  // Whether to focus on the first input box, only works when the first form item is input\n  autoFocusFirstItem?: boolean;\n  // \u3010jeecg\u3011\u5982\u679C showAdvancedButton \u4E3A true\uFF0C\u8D85\u8FC7\u6307\u5B9A\u5217\u6570\u9ED8\u8BA4\u6298\u53E0\uFF0C\u9ED8\u8BA4\u4E3A3\n  autoAdvancedCol?: number;\n  // \u5982\u679C showAdvancedButton \u4E3A true\uFF0C\u8D85\u8FC7\u6307\u5B9A\u884C\u6570\u884C\u9ED8\u8BA4\u6298\u53E0\n  autoAdvancedLine?: number;\n  // \u6298\u53E0\u65F6\u59CB\u7EC8\u4FDD\u6301\u663E\u793A\u7684\u884C\u6570\n  alwaysShowLines?: number;\n  // Whether to show the operation button\n  showActionButtonGroup?: boolean;\n\n  // Reset button configuration\n  resetButtonOptions?: Partial<ButtonProps>;\n\n  // Confirm button configuration\n  submitButtonOptions?: Partial<ButtonProps>;\n\n  // Operation column configuration\n  actionColOptions?: Partial<ColEx>;\n\n  // Show reset button\n  showResetButton?: boolean;\n  // Show confirmation button\n  showSubmitButton?: boolean;\n\n  resetFunc?: () => Promise<void>;\n  submitFunc?: () => Promise<void>;\n  transformDateFunc?: (date: any) => string;\n  colon?: boolean;\n}\nexport interface FormSchema {\n  // Field name\n  field: string;\n  // Event name triggered by internal value change, default change\n  changeEvent?: string;\n  // Variable name bound to v-model Default value\n  valueField?: string;\n  // Label name\n  label: string | VNode;\n  // Auxiliary text\n  subLabel?: string;\n  // Help text on the right side of the text\n  helpMessage?: string | string[] | ((renderCallbackParams: RenderCallbackParams) => string | string[]);\n  // BaseHelp component props\n  helpComponentProps?: Partial<HelpComponentProps>;\n  // Label width, if it is passed, the labelCol and WrapperCol configured by itemProps will be invalid\n  labelWidth?: string | number;\n  // Disable the adjustment of labelWidth with global settings of formModel, and manually set labelCol and wrapperCol by yourself\n  disabledLabelWidth?: boolean;\n  // render component\n  component: ComponentType;\n  // Component parameters\n  componentProps?:\n    | ((opt: { schema: FormSchema; tableAction: TableActionType; formActionType: FormActionType; formModel: Recordable }) => Recordable)\n    | object;\n  // Required\n  required?: boolean | ((renderCallbackParams: RenderCallbackParams) => boolean);\n\n  suffix?: string | number | ((values: RenderCallbackParams) => string | number);\n\n  // Validation rules\n  rules?: Rule[];\n  // Check whether the information is added to the label\n  rulesMessageJoinLabel?: boolean;\n\n  // Reference formModelItem\n  itemProps?: Partial<FormItem>;\n\n  // col configuration outside formModelItem\n  colProps?: Partial<ColEx>;\n\n  // \u9ED8\u8BA4\u503C\n  defaultValue?: any;\n  isAdvanced?: boolean;\n\n  // Matching details components\n  span?: number;\n\n  ifShow?: boolean | ((renderCallbackParams: RenderCallbackParams) => boolean);\n\n  show?: boolean | ((renderCallbackParams: RenderCallbackParams) => boolean);\n\n  // Render the content in the form-item tag\n  render?: (renderCallbackParams: RenderCallbackParams) => VNode | VNode[] | string;\n\n  // Rendering col content requires outer wrapper form-item\n  renderColContent?: (renderCallbackParams: RenderCallbackParams) => VNode | VNode[] | string;\n\n  renderComponentContent?: ((renderCallbackParams: RenderCallbackParams) => any) | VNode | VNode[] | string;\n\n  // Custom slot, in from-item\n  slot?: string;\n\n  // Custom slot, similar to renderColContent\n  colSlot?: string;\n\n  dynamicDisabled?: boolean | ((renderCallbackParams: RenderCallbackParams) => boolean);\n\n  dynamicRules?: (renderCallbackParams: RenderCallbackParams) => Rule[];\n\n  // \u8FD9\u4E2A\u5C5E\u6027\u81EA\u5B9A\u4E49\u7684 \u7528\u4E8E\u81EA\u5B9A\u4E49\u7684\u4E1A\u52A1 \u6BD4\u5982\u5728\u8868\u5355\u6253\u5F00\u7684\u65F6\u5019\u4FEE\u6539\u8868\u5355\u7684\u7981\u7528\u72B6\u6001\uFF0C\u4F46\u662F\u53C8\u4E0D\u80FD\u91CD\u5199componentProps\uFF0C\u56E0\u4E3A\u4ED6\u7684\u5185\u5BB9\u592A\u591A\u4E86\uFF0C\u6240\u4EE5\u4F7F\u7528dynamicDisabled\u548Cbuss\u5B9E\u73B0\n  buss?: any;\n  \n  //label\u5B57\u6570\u63A7\u5236\uFF08label\u5BBD\u5EA6\uFF09\n  labelLength?: number\n}\nexport interface HelpComponentProps {\n  maxWidth: string;\n  // Whether to display the serial number\n  showIndex: boolean;\n  // Text list\n  text: any;\n  // colour\n  color: string;\n  // font size\n  fontSize: string;\n  icon: string;\n  absolute: boolean;\n  // Positioning\n  position: any;\n}\n", "import type { NamePath } from 'ant-design-vue/lib/form/interface';\nimport type { ColProps } from 'ant-design-vue/lib/grid/Col';\nimport type { HTMLAttributes, VNodeChild } from 'vue';\n\nexport interface FormItem {\n  /**\n   * Used with label, whether to display : after label text.\n   * @default true\n   * @type boolean\n   */\n  colon?: boolean;\n\n  /**\n   * The extra prompt message. It is similar to help. Usage example: to display error message and prompt message at the same time.\n   * @type any (string | slot)\n   */\n  extra?: string | VNodeChild | JSX.Element;\n\n  /**\n   * Used with validateStatus, this option specifies the validation status icon. Recommended to be used only with Input.\n   * @default false\n   * @type boolean\n   */\n  hasFeedback?: boolean;\n\n  /**\n   * The prompt message. If not provided, the prompt message will be generated by the validation rule.\n   * @type any (string | slot)\n   */\n  help?: string | VNodeChild | JSX.Element;\n\n  /**\n   * Label test\n   * @type any (string | slot)\n   */\n  label?: string | VNodeChild | JSX.Element;\n\n  /**\n   * The layout of label. You can set span offset to something like {span: 3, offset: 12} or sm: {span: 3, offset: 12} same as with <Col>\n   * @type Col\n   */\n  labelCol?: ColProps & HTMLAttributes;\n\n  /**\n   * Whether provided or not, it will be generated by the validation rule.\n   * @default false\n   * @type boolean\n   */\n  required?: boolean;\n\n  /**\n   * The validation status. If not provided, it will be generated by validation rule. options: 'success' 'warning' 'error' 'validating'\n   * @type string\n   */\n  validateStatus?: '' | 'success' | 'warning' | 'error' | 'validating';\n\n  /**\n   * The layout for input controls, same as labelCol\n   * @type Col\n   */\n  wrapperCol?: ColProps;\n  /**\n   * Set sub label htmlFor.\n   */\n  htmlFor?: string;\n  /**\n   * text align of label\n   */\n  labelAlign?: 'left' | 'right';\n  /**\n   * a key of model. In the setting of validate and resetFields method, the attribute is required\n   */\n  name?: NamePath;\n  /**\n   * validation rules of form\n   */\n  rules?: object | object[];\n  /**\n   * Whether to automatically associate form fields. In most cases, you can setting automatic association.\n   * If the conditions for automatic association are not met, you can manually associate them. See the notes below.\n   */\n  autoLink?: boolean;\n  /**\n   * Whether stop validate on first rule of error for this field.\n   */\n  validateFirst?: boolean;\n  /**\n   * When to validate the value of children node\n   */\n  validateTrigger?: string | string[] | false;\n}\n", "import type { ComponentType } from '../types/index';\nimport { tryOnUnmounted } from '@vueuse/core';\nimport { add, del } from '../componentMap';\nimport type { Component } from 'vue';\n\nexport function useComponentRegister(compName: ComponentType, comp: Component) {\n  add(compName, comp);\n  tryOnUnmounted(() => {\n    del(compName);\n  });\n}\n"],
  "mappings": "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",
  "names": ["values", "default"]
}
