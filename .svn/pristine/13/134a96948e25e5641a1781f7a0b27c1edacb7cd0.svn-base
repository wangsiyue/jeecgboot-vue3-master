{
  "version": 3,
  "sources": ["../../@jeecg/online/enhance.data.js"],
  "sourcesContent": ["import { computed } from \"vue\";\nimport { o as onlineDefaultButton } from \"./cgform.data.js\";\nfunction useJavaColumns(btnList) {\n  let columns = [\n    {\n      title: \"\\u9875\\u9762\\u6309\\u94AE\",\n      align: \"center\",\n      dataIndex: \"buttonCode\",\n      customRender: ({ text }) => renderButtonText(text, btnList.value)\n    },\n    {\n      title: \"\\u4E8B\\u4EF6\\u72B6\\u6001\",\n      align: \"center\",\n      dataIndex: \"event\",\n      customRender: ({ text }) => text == \"start\" ? \"\\u5F00\\u59CB\" : \"\\u7ED3\\u675F\"\n    },\n    {\n      title: \"\\u7C7B\\u578B\",\n      align: \"center\",\n      dataIndex: \"cgJavaType\",\n      customRender: ({ text }) => {\n        if (text == \"spring\") {\n          return \"spring-key\";\n        } else if (text === \"class\") {\n          return \"java-class\";\n        } else if (text === \"http\") {\n          return \"http-api\";\n        } else {\n          return text;\n        }\n      }\n    },\n    {\n      title: \"\\u5185\\u5BB9\",\n      align: \"center\",\n      dataIndex: \"cgJavaValue\"\n    },\n    {\n      title: \"\\u662F\\u5426\\u751F\\u6548\",\n      align: \"center\",\n      dataIndex: \"activeStatus\",\n      customRender: ({ text }) => {\n        if (text == \"1\") {\n          return \"\\u6709\\u6548\";\n        } else {\n          return \"\\u65E0\\u6548\";\n        }\n      }\n    }\n  ];\n  return { columns };\n}\nfunction useJavaFormSchemas(btnList) {\n  const formSchemas = computed(() => {\n    return [\n      {\n        label: \"\\u9875\\u9762\\u6309\\u94AE\",\n        field: \"buttonCode\",\n        component: \"Select\",\n        componentProps: {\n          options: [\n            { label: \"\\u65B0\\u589E\", value: \"add\" },\n            { label: \"\\u7F16\\u8F91\", value: \"edit\" },\n            { label: \"\\u5220\\u9664\", value: \"delete\" },\n            { label: \"\\u5BFC\\u5165\", value: \"import\" },\n            { label: \"\\u5BFC\\u51FA\", value: \"export\" },\n            { label: \"\\u67E5\\u8BE2\", value: \"query\" },\n            ...btnList.value.map((item) => ({ label: item.buttonName, value: item.buttonCode }))\n          ]\n        },\n        defaultValue: \"add\"\n      },\n      {\n        label: \"\\u4E8B\\u4EF6\\u72B6\\u6001\",\n        field: \"event\",\n        component: \"RadioButtonGroup\",\n        componentProps: {\n          options: [\n            { label: \"\\u5F00\\u59CB\", value: \"start\" },\n            { label: \"\\u7ED3\\u675F\", value: \"end\" }\n          ]\n        },\n        defaultValue: \"end\"\n      },\n      {\n        label: \"\\u7C7B\\u578B\",\n        field: \"cgJavaType\",\n        component: \"RadioButtonGroup\",\n        componentProps: {\n          options: [\n            { label: \"spring-key\", value: \"spring\" },\n            { label: \"java-class\", value: \"class\" },\n            { label: \"http-api\", value: \"http\" }\n          ]\n        },\n        defaultValue: \"spring\"\n      },\n      {\n        label: \"\\u5185\\u5BB9\",\n        field: \"cgJavaValue\",\n        component: \"Input\",\n        required: true\n      },\n      {\n        label: \"\\u662F\\u5426\\u751F\\u6548\",\n        field: \"activeStatus\",\n        component: \"RadioButtonGroup\",\n        componentProps: {\n          options: [\n            { label: \"\\u6709\\u6548\", value: \"1\" },\n            { label: \"\\u65E0\\u6548\", value: \"0\" }\n          ]\n        },\n        defaultValue: \"1\"\n      }\n    ];\n  });\n  return { formSchemas };\n}\nfunction useSqlColumns(btnList) {\n  let columns = [\n    {\n      title: \"\\u9875\\u9762\\u6309\\u94AE\",\n      align: \"center\",\n      dataIndex: \"buttonCode\",\n      customRender: ({ text }) => renderButtonText(text, btnList.value)\n    },\n    {\n      title: \"\\u589E\\u5F3ASQL\",\n      align: \"center\",\n      dataIndex: \"cgbSql\",\n      ellipsis: true\n    }\n  ];\n  return { columns };\n}\nfunction useSqlFormSchemas(btnList) {\n  const formSchemas = computed(() => {\n    return [\n      {\n        label: \"\\u9875\\u9762\\u6309\\u94AE\",\n        field: \"buttonCode\",\n        component: \"Select\",\n        componentProps: {\n          options: [\n            { label: \"\\u65B0\\u589E\", value: \"add\" },\n            { label: \"\\u7F16\\u8F91\", value: \"edit\" },\n            { label: \"\\u5220\\u9664\", value: \"delete\" },\n            ...btnList.value.map((item) => ({ label: item.buttonName, value: item.buttonCode }))\n          ]\n        },\n        defaultValue: \"add\"\n      },\n      {\n        label: \"\\u589E\\u5F3ASQL\",\n        field: \"cgbSql\",\n        component: \"JCodeEditor\",\n        componentProps: {\n          language: \"sql\",\n          placeholder: \"\\u8BF7\\u8F93\\u5165SQL\\u8BED\\u53E5\",\n          languageChange: false,\n          lineNumbers: false,\n          fullScreen: true,\n          minHeight: 320\n        },\n        defaultValue: \"\"\n      },\n      {\n        label: \"\\u63CF\\u8FF0\",\n        field: \"content\",\n        component: \"InputTextArea\",\n        defaultValue: \"\"\n      }\n    ];\n  });\n  return { formSchemas };\n}\nfunction renderButtonText(text, btnList) {\n  let str = text;\n  for (let item of onlineDefaultButton) {\n    if (item.code === text) {\n      str = item.title;\n      break;\n    }\n  }\n  if (!str) {\n    for (let item of btnList) {\n      if (item.buttonCode === text) {\n        str = item.buttonName;\n        break;\n      }\n    }\n  }\n  return str;\n}\nexport { useJavaColumns as a, useSqlFormSchemas as b, useSqlColumns as c, useJavaFormSchemas as u };\n"],
  "mappings": "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",
  "names": []
}
